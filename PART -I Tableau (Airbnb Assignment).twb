<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0909.1159                               -->
<workbook original-version='18.1' source-build='2023.2.2 (20232.23.0909.1159)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <BasicButtonObject />
    <CollapsiblePane />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption=' Select your Neighbourhood' datatype='string' name='[Neighbourhood Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Gaasperdam - Driemond&quot;'>
        <calculation class='tableau' formula='&quot;Gaasperdam - Driemond&quot;' />
        <members>
          <member value='&quot;Bijlmer-Centrum&quot;' />
          <member value='&quot;Bijlmer-Oost&quot;' />
          <member value='&quot;Bos en Lommer&quot;' />
          <member value='&quot;Buitenveldert - Zuidas&quot;' />
          <member value='&quot;Centrum-Oost&quot;' />
          <member value='&quot;Centrum-West&quot;' />
          <member value='&quot;De Aker - Nieuw Sloten&quot;' />
          <member value='&quot;De Baarsjes - Oud-West&quot;' />
          <member value='&quot;De Pijp - Rivierenbuurt&quot;' />
          <member value='&quot;Gaasperdam - Driemond&quot;' />
          <member value='&quot;Geuzenveld - Slotermeer&quot;' />
          <member value='&quot;IJburg - Zeeburgereiland&quot;' />
          <member value='&quot;Noord-Oost&quot;' />
          <member value='&quot;Noord-West&quot;' />
          <member value='&quot;Oostelijk Havengebied - Indische Buurt&quot;' />
          <member value='&quot;Osdorp&quot;' />
          <member value='&quot;Oud-Noord&quot;' />
          <member value='&quot;Oud-Oost&quot;' />
          <member value='&quot;Slotervaart&quot;' />
          <member value='&quot;Watergraafsmeer&quot;' />
          <member value='&quot;Westerpark&quot;' />
          <member value='&quot;Zuid&quot;' />
        </members>
      </column>
      <column caption='Parameter 1' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
      </column>
    </datasource>
    <datasource caption='airbnblistings' inline='true' name='federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='airbnblistings' name='textscan.128m1qf0bgfpqe19zqxr8185nky7'>
            <connection class='textscan' directory='C:/Users/adity/Downloads' filename='airbnblistings.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.128m1qf0bgfpqe19zqxr8185nky7' name='airbnblistings.csv' table='[airbnblistings#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='id' ordinal='0' />
            <column datatype='string' name='name' ordinal='1' />
            <column datatype='integer' name='host_id' ordinal='2' />
            <column datatype='string' name='host_name' ordinal='3' />
            <column datatype='integer' name='host_since_Year' ordinal='4' />
            <column datatype='string' name='neighbourhood' ordinal='5' />
            <column datatype='real' name='latitude' ordinal='6' />
            <column datatype='real' name='longitude' ordinal='7' />
            <column datatype='string' name='room_type' ordinal='8' />
            <column datatype='integer' name='price' ordinal='9' />
            <column datatype='integer' name='minimum_nights' ordinal='10' />
            <column datatype='integer' name='number_of_reviews' ordinal='11' />
            <column datatype='date' name='last_review' ordinal='12' />
            <column datatype='real' name='review_scores_rating' ordinal='13' />
            <column datatype='real' name='review_scores_accuracy' ordinal='14' />
            <column datatype='real' name='review_scores_cleanliness' ordinal='15' />
            <column datatype='real' name='review_scores_checkin' ordinal='16' />
            <column datatype='real' name='review_scores_communication' ordinal='17' />
            <column datatype='real' name='review_scores_location' ordinal='18' />
            <column datatype='real' name='review_scores_value' ordinal='19' />
            <column datatype='integer' name='accommodates' ordinal='20' />
            <column datatype='integer' name='bedrooms' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.128m1qf0bgfpqe19zqxr8185nky7' name='airbnblistings.csv' table='[airbnblistings#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='id' ordinal='0' />
            <column datatype='string' name='name' ordinal='1' />
            <column datatype='integer' name='host_id' ordinal='2' />
            <column datatype='string' name='host_name' ordinal='3' />
            <column datatype='integer' name='host_since_Year' ordinal='4' />
            <column datatype='string' name='neighbourhood' ordinal='5' />
            <column datatype='real' name='latitude' ordinal='6' />
            <column datatype='real' name='longitude' ordinal='7' />
            <column datatype='string' name='room_type' ordinal='8' />
            <column datatype='integer' name='price' ordinal='9' />
            <column datatype='integer' name='minimum_nights' ordinal='10' />
            <column datatype='integer' name='number_of_reviews' ordinal='11' />
            <column datatype='date' name='last_review' ordinal='12' />
            <column datatype='real' name='review_scores_rating' ordinal='13' />
            <column datatype='real' name='review_scores_accuracy' ordinal='14' />
            <column datatype='real' name='review_scores_cleanliness' ordinal='15' />
            <column datatype='real' name='review_scores_checkin' ordinal='16' />
            <column datatype='real' name='review_scores_communication' ordinal='17' />
            <column datatype='real' name='review_scores_location' ordinal='18' />
            <column datatype='real' name='review_scores_value' ordinal='19' />
            <column datatype='integer' name='accommodates' ordinal='20' />
            <column datatype='integer' name='bedrooms' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[airbnblistings.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[airbnblistings.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnblistings.csv_26B1A6A208384D36A3D97291F988FF7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[airbnblistings.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnblistings.csv_26B1A6A208384D36A3D97291F988FF7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[host_id]</local-name>
            <parent-name>[airbnblistings.csv]</parent-name>
            <remote-alias>host_id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnblistings.csv_26B1A6A208384D36A3D97291F988FF7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[host_name]</local-name>
            <parent-name>[airbnblistings.csv]</parent-name>
            <remote-alias>host_name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnblistings.csv_26B1A6A208384D36A3D97291F988FF7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host_since_Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[host_since_Year]</local-name>
            <parent-name>[airbnblistings.csv]</parent-name>
            <remote-alias>host_since_Year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnblistings.csv_26B1A6A208384D36A3D97291F988FF7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighbourhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neighbourhood]</local-name>
            <parent-name>[airbnblistings.csv]</parent-name>
            <remote-alias>neighbourhood</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnblistings.csv_26B1A6A208384D36A3D97291F988FF7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[airbnblistings.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnblistings.csv_26B1A6A208384D36A3D97291F988FF7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[airbnblistings.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnblistings.csv_26B1A6A208384D36A3D97291F988FF7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>room_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[room_type]</local-name>
            <parent-name>[airbnblistings.csv]</parent-name>
            <remote-alias>room_type</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnblistings.csv_26B1A6A208384D36A3D97291F988FF7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[airbnblistings.csv]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnblistings.csv_26B1A6A208384D36A3D97291F988FF7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>minimum_nights</remote-name>
            <remote-type>20</remote-type>
            <local-name>[minimum_nights]</local-name>
            <parent-name>[airbnblistings.csv]</parent-name>
            <remote-alias>minimum_nights</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnblistings.csv_26B1A6A208384D36A3D97291F988FF7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number_of_reviews</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number_of_reviews]</local-name>
            <parent-name>[airbnblistings.csv]</parent-name>
            <remote-alias>number_of_reviews</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnblistings.csv_26B1A6A208384D36A3D97291F988FF7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_review</remote-name>
            <remote-type>133</remote-type>
            <local-name>[last_review]</local-name>
            <parent-name>[airbnblistings.csv]</parent-name>
            <remote-alias>last_review</remote-alias>
            <ordinal>12</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnblistings.csv_26B1A6A208384D36A3D97291F988FF7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>review_scores_rating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[review_scores_rating]</local-name>
            <parent-name>[airbnblistings.csv]</parent-name>
            <remote-alias>review_scores_rating</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnblistings.csv_26B1A6A208384D36A3D97291F988FF7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>review_scores_accuracy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[review_scores_accuracy]</local-name>
            <parent-name>[airbnblistings.csv]</parent-name>
            <remote-alias>review_scores_accuracy</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnblistings.csv_26B1A6A208384D36A3D97291F988FF7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>review_scores_cleanliness</remote-name>
            <remote-type>5</remote-type>
            <local-name>[review_scores_cleanliness]</local-name>
            <parent-name>[airbnblistings.csv]</parent-name>
            <remote-alias>review_scores_cleanliness</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnblistings.csv_26B1A6A208384D36A3D97291F988FF7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>review_scores_checkin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[review_scores_checkin]</local-name>
            <parent-name>[airbnblistings.csv]</parent-name>
            <remote-alias>review_scores_checkin</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnblistings.csv_26B1A6A208384D36A3D97291F988FF7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>review_scores_communication</remote-name>
            <remote-type>5</remote-type>
            <local-name>[review_scores_communication]</local-name>
            <parent-name>[airbnblistings.csv]</parent-name>
            <remote-alias>review_scores_communication</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnblistings.csv_26B1A6A208384D36A3D97291F988FF7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>review_scores_location</remote-name>
            <remote-type>5</remote-type>
            <local-name>[review_scores_location]</local-name>
            <parent-name>[airbnblistings.csv]</parent-name>
            <remote-alias>review_scores_location</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnblistings.csv_26B1A6A208384D36A3D97291F988FF7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>review_scores_value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[review_scores_value]</local-name>
            <parent-name>[airbnblistings.csv]</parent-name>
            <remote-alias>review_scores_value</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnblistings.csv_26B1A6A208384D36A3D97291F988FF7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>accommodates</remote-name>
            <remote-type>20</remote-type>
            <local-name>[accommodates]</local-name>
            <parent-name>[airbnblistings.csv]</parent-name>
            <remote-alias>accommodates</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnblistings.csv_26B1A6A208384D36A3D97291F988FF7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bedrooms</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bedrooms]</local-name>
            <parent-name>[airbnblistings.csv]</parent-name>
            <remote-alias>bedrooms</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[airbnblistings.csv_26B1A6A208384D36A3D97291F988FF7C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Number of Listings' datatype='integer' name='[Calculation_991636360802910208]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([id])' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='airbnblistings.csv' datatype='table' name='[__tableau_internal_object_id__].[airbnblistings.csv_26B1A6A208384D36A3D97291F988FF7C]' role='measure' type='quantitative' />
      <column caption='Accommodates' datatype='integer' name='[accommodates]' role='measure' type='quantitative' />
      <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
      <column caption='Host Id' datatype='integer' name='[host_id]' role='dimension' type='ordinal' />
      <column caption='Host Name' datatype='string' name='[host_name]' role='dimension' type='nominal' />
      <column caption='host since Year' datatype='integer' name='[host_since_Year]' role='dimension' type='quantitative' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Last Review' datatype='date' name='[last_review]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Minimum Nights' datatype='integer' name='[minimum_nights]' role='measure' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
      <column caption='Number Of Reviews' datatype='integer' name='[number_of_reviews]' role='measure' type='quantitative' />
      <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
      <column caption='Review Scores Accuracy' datatype='real' name='[review_scores_accuracy]' role='measure' type='quantitative' />
      <column caption='Review Scores Checkin' datatype='real' name='[review_scores_checkin]' role='measure' type='quantitative' />
      <column caption='Review Scores Cleanliness' datatype='real' name='[review_scores_cleanliness]' role='measure' type='quantitative' />
      <column caption='Review Scores Communication' datatype='real' name='[review_scores_communication]' role='measure' type='quantitative' />
      <column caption='Review Scores Location' datatype='real' name='[review_scores_location]' role='measure' type='quantitative' />
      <column caption='Review Scores Rating' datatype='real' name='[review_scores_rating]' role='measure' type='quantitative' />
      <column caption='Review Scores Value' datatype='real' name='[review_scores_value]' role='measure' type='quantitative' />
      <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
      <column-instance column='[host_name]' derivation='None' name='[none:host_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[neighbourhood]' derivation='None' name='[none:neighbourhood:nk]' pivot='key' type='nominal' />
      <column-instance column='[room_type]' derivation='None' name='[none:room_type:nk]' pivot='key' type='nominal' />
      <group caption='Neighbourhood Set' name='[Neighbourhood Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='[neighbourhood]=[Parameters].[Neighbourhood Parameter]' function='filter' user:ui-marker='filter-by'>
          <groupfilter function='level-members' level='[neighbourhood]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:host_name:nk]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Ainara&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Aisha&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;Wiby&quot;</bucket>
            </map>
            <map to='#2b5884'>
              <bucket>&quot;Alexis&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;Truus&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Angèle&quot;</bucket>
            </map>
            <map to='#2e5b87'>
              <bucket>&quot;Tjerk&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Anissa&quot;</bucket>
            </map>
            <map to='#2f5c89'>
              <bucket>&quot;Andrea&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Ann And Peter&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Ariel&quot;</bucket>
            </map>
            <map to='#305d8a'>
              <bucket>&quot;Sylvia&quot;</bucket>
            </map>
            <map to='#325f8b'>
              <bucket>&quot;Arman&quot;</bucket>
            </map>
            <map to='#325f8c'>
              <bucket>&quot;Stephanie&quot;</bucket>
            </map>
            <map to='#33608c'>
              <bucket>&quot;Arnoud&quot;</bucket>
            </map>
            <map to='#34618d'>
              <bucket>&quot;Arne&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Sheniva&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Aurelie&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Berthold&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;Serge&quot;</bucket>
            </map>
            <map to='#386593'>
              <bucket>&quot;Benjamin&quot;</bucket>
            </map>
            <map to='#386693'>
              <bucket>&quot;Saskia, Wim, Johan, Jolande, Ina&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Catherine&quot;</bucket>
            </map>
            <map to='#3a6895'>
              <bucket>&quot;S&quot;</bucket>
            </map>
            <map to='#3b6895'>
              <bucket>&quot;Dinah&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;Bilu &amp; Bili&quot;</bucket>
            </map>
            <map to='#3b6896'>
              <bucket>&quot;D.&quot;</bucket>
            </map>
            <map to='#3c6a97'>
              <bucket>&quot;Prakash&quot;</bucket>
            </map>
            <map to='#3c6a98'>
              <bucket>&quot;Bram&quot;</bucket>
            </map>
            <map to='#3d6a98'>
              <bucket>&quot;Daniël&quot;</bucket>
            </map>
            <map to='#3e6c99'>
              <bucket>&quot;Pim&quot;</bucket>
            </map>
            <map to='#3f6d9b'>
              <bucket>&quot;Chanti&quot;</bucket>
            </map>
            <map to='#406d9b'>
              <bucket>&quot;Elle&quot;</bucket>
            </map>
            <map to='#406e9b'>
              <bucket>&quot;Patricia&quot;</bucket>
            </map>
            <map to='#416f9d'>
              <bucket>&quot;Elly&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Dana&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Niels&quot;</bucket>
            </map>
            <map to='#43719f'>
              <bucket>&quot;Elwin&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Danny&quot;</bucket>
            </map>
            <map to='#4372a0'>
              <bucket>&quot;Myrthe&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Emma&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Fons&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;David&quot;</bucket>
            </map>
            <map to='#4574a2'>
              <bucket>&quot;Miles&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Denzel&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Eric&quot;</bucket>
            </map>
            <map to='#4776a4'>
              <bucket>&quot;Michiel&quot;</bucket>
            </map>
            <map to='#4777a5'>
              <bucket>&quot;Eliran&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Erwin&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Melanie&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bob&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eelco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guillaume&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jerry&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lisanne&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Martijn &amp; Betina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nidi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Roel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sybille&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zico&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Fabian&quot;</bucket>
            </map>
            <map to='#4a7aa8'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Evgeniia&quot;</bucket>
            </map>
            <map to='#4b7caa'>
              <bucket>&quot;Fabiana&quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;Marina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ait&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Barbara&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Daniella&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fai&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jacky&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kevin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marij&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nadine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rental Valley&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Simone&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Victorine &amp; Casper&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Frau Antje&quot;</bucket>
            </map>
            <map to='#4e7fac'>
              <bucket>&quot;Marijn&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Fernando E Taís&quot;</bucket>
            </map>
            <map to='#4e7fad'>
              <bucket>&quot;Hans&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Fred&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;Margareth&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Fulora&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Georgios&quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Manouk&quot;</bucket>
            </map>
            <map to='#5384b1'>
              <bucket>&quot;Gianni&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Homestay Amsterdam&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Hüsnü&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Maarten&quot;</bucket>
            </map>
            <map to='#5586b2'>
              <bucket>&quot;Guiseppe&quot;</bucket>
            </map>
            <map to='#5687b4'>
              <bucket>&quot;Lida&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Ilan And Shlomit&quot;</bucket>
            </map>
            <map to='#5889b5'>
              <bucket>&quot;Hester&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Info&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;Koets&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alizée&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Berend&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;David &amp; Beata&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Freek&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Janeth&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;León&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mark&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Natalie&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rinske&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Stefan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Willemijn&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Holly&quot;</bucket>
            </map>
            <map to='#5a8bb7'>
              <bucket>&quot;Jeff&quot;</bucket>
            </map>
            <map to='#5b8cb7'>
              <bucket>&quot;Jolina&quot;</bucket>
            </map>
            <map to='#5b8cb8'>
              <bucket>&quot;Jason&quot;</bucket>
            </map>
            <map to='#5c8db8'>
              <bucket>&quot;Ian&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;Jin&quot;</bucket>
            </map>
            <map to='#5e8fb9'>
              <bucket>&quot;Ilan&quot;</bucket>
            </map>
            <map to='#5e8fba'>
              <bucket>&quot;Judith&quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Jaqueline &amp; Keesjan&quot;</bucket>
            </map>
            <map to='#6091bb'>
              <bucket>&quot;Jikkemijn&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Jillian&quot;</bucket>
            </map>
            <map to='#6091bc'>
              <bucket>&quot;Jur&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Jeroen&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Jef &amp; Mette&quot;</bucket>
            </map>
            <map to='#6394be'>
              <bucket>&quot;Karin&quot;</bucket>
            </map>
            <map to='#6495bf'>
              <bucket>&quot;Jenny&quot;</bucket>
            </map>
            <map to='#6596c0'>
              <bucket>&quot;Kristel&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Jelke&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;Job&quot;</bucket>
            </map>
            <map to='#6899c1'>
              <bucket>&quot;Kyra&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;Josien&quot;</bucket>
            </map>
            <map to='#699ac2'>
              <bucket>&quot;Jeanet&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Joy&quot;</bucket>
            </map>
            <map to='#6a9bc3'>
              <bucket>&quot;Liesbeth&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Jacqueline&quot;</bucket>
            </map>
            <map to='#6c9dc5'>
              <bucket>&quot;Juan&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Isabelle&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Kateryna&quot;</bucket>
            </map>
            <map to='#6fa0c7'>
              <bucket>&quot;M&quot;</bucket>
            </map>
            <map to='#6fa0c8'>
              <bucket>&quot;Kleopatra&quot;</bucket>
            </map>
            <map to='#70a1c8'>
              <bucket>&quot;Irina&quot;</bucket>
            </map>
            <map to='#71a2c9'>
              <bucket>&quot;Kurtly&quot;</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Madalina&quot;</bucket>
            </map>
            <map to='#72a3ca'>
              <bucket>&quot;Ionut&quot;</bucket>
            </map>
            <map to='#73a4ca'>
              <bucket>&quot;Laurens&quot;</bucket>
            </map>
            <map to='#74a5cb'>
              <bucket>&quot;Marc En Marielle&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Hanny&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Lena&quot;</bucket>
            </map>
            <map to='#77a8cd'>
              <bucket>&quot;Gwen&quot;</bucket>
            </map>
            <map to='#78a9cf'>
              <bucket>&quot;Lovisa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antoinette&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Carlijn&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Elzbieta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Johanna&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Meie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Otto&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rositsa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Thea&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Frank&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;Marcel &amp; Ronja&quot;</bucket>
            </map>
            <map to='#7aaad0'>
              <bucket>&quot;Nathaly&quot;</bucket>
            </map>
            <map to='#7aabd0'>
              <bucket>&quot;Marc&quot;</bucket>
            </map>
            <map to='#7bacd1'>
              <bucket>&quot;Marcha&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Francois&quot;</bucket>
            </map>
            <map to='#7cadd1'>
              <bucket>&quot;Marèn&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Francine&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;Maurits&quot;</bucket>
            </map>
            <map to='#80b0d4'>
              <bucket>&quot;Marloes &amp; Gabriel&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Femke&quot;</bucket>
            </map>
            <map to='#80b0d5'>
              <bucket>&quot;Monique&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Esther&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;Mathilde&quot;</bucket>
            </map>
            <map to='#83b3d7'>
              <bucket>&quot;N.&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Erik&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Moniek&quot;</bucket>
            </map>
            <map to='#86b5d8'>
              <bucket>&quot;Nico&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anne Van Vlerken&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brigitte&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Elianne&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Han&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Joep&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Luis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nienke&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Roelant&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tamara&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zoal&quot;</bucket>
            </map>
            <map to='#87b7d9'>
              <bucket>&quot;Petra&quot;</bucket>
            </map>
            <map to='#88b7da'>
              <bucket>&quot;Nadja &amp; Aydın&quot;</bucket>
            </map>
            <map to='#88b8da'>
              <bucket>&quot;Eric &amp; Carla&quot;</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>&quot;Odette&quot;</bucket>
            </map>
            <map to='#8ab9db'>
              <bucket>&quot;Niloufar&quot;</bucket>
            </map>
            <map to='#8bbadc'>
              <bucket>&quot;Dick&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Noelle&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Outside&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ambra &amp; Tarik&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Durand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gerwin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jasper&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lex&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marlijn&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nelson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ro&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Stefanie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wilmer&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Danielle&quot;</bucket>
            </map>
            <map to='#8ebddd'>
              <bucket>&quot;Noortje&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Petra Van&quot;</bucket>
            </map>
            <map to='#8fbdde'>
              <bucket>&quot;Tatjana&quot;</bucket>
            </map>
            <map to='#90bfdf'>
              <bucket>&quot;Oliver&quot;</bucket>
            </map>
            <map to='#91bfdf'>
              <bucket>&quot;Daisy&quot;</bucket>
            </map>
            <map to='#92c0df'>
              <bucket>&quot;Place To Be&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;Chantal&quot;</bucket>
            </map>
            <map to='#95c2e1'>
              <bucket>&quot;Richard&quot;</bucket>
            </map>
            <map to='#95c3e1'>
              <bucket>&quot;Renée&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Caitlin&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Reservations&quot;</bucket>
            </map>
            <map to='#97c4e2'>
              <bucket>&quot;Thierry&quot;</bucket>
            </map>
            <map to='#9ac6e4'>
              <bucket>&quot;C.T.&quot;</bucket>
            </map>
            <map to='#9bc7e4'>
              <bucket>&quot;Ruud &amp; Marije&quot;</bucket>
            </map>
            <map to='#9cc8e5'>
              <bucket>&quot;Roland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ayo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Coen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eva&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Juliette&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marie&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mike&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pieter&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Selma&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ufuk&quot;</bucket>
            </map>
            <map to='#9dc9e5'>
              <bucket>&quot;Bobby&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Roos&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Shurjeel&quot;</bucket>
            </map>
            <map to='#9fcae6'>
              <bucket>&quot;Tolis&quot;</bucket>
            </map>
            <map to='#a0cbe7'>
              <bucket>&quot;Bernadette&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Akos&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bart&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dany&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fallon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;James&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kirsten&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marissa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nalan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rick&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sjuulke&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vincent&quot;</bucket>
            </map>
            <map to='#a0cce7'>
              <bucket>&quot;Ruben&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Benedicte&quot;</bucket>
            </map>
            <map to='#a3cde8'>
              <bucket>&quot;Rubina&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Sascha&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Stanislav&quot;</bucket>
            </map>
            <map to='#a6d0ea'>
              <bucket>&quot;Bart-Jan&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Shane&quot;</bucket>
            </map>
            <map to='#a7d1ea'>
              <bucket>&quot;Wahid&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Aranka&quot;</bucket>
            </map>
            <map to='#aad3eb'>
              <bucket>&quot;Sietske&quot;</bucket>
            </map>
            <map to='#abd3ec'>
              <bucket>&quot;Vera&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Annemiek&quot;</bucket>
            </map>
            <map to='#acd4ec'>
              <bucket>&quot;Sjoerd&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Anne&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;The Student Hotel&quot;</bucket>
            </map>
            <map to='#afd6ed'>
              <bucket>&quot;Victorine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arthur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Céline&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Estanislao&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ilse&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jorinde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Marcel&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Merin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Peter&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saskia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tom &amp; Noor&quot;</bucket>
            </map>
            <map to='#b0d7ed'>
              <bucket>&quot;Warda&quot;</bucket>
            </map>
            <map to='#b1d8ee'>
              <bucket>&quot;Ton&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Ann&quot;</bucket>
            </map>
            <map to='#b2d8ee'>
              <bucket>&quot;Wisnu&quot;</bucket>
            </map>
            <map to='#b4d9ef'>
              <bucket>&quot;Willem &amp; Jelena&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Angelique&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot;Xander&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bernard&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dutchies Hostel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gijs &amp; Carina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jelmer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lieselot&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marloes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nicola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rob&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stephan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wisse&quot;</bucket>
            </map>
            <map to='#b6dbf0'>
              <bucket>&quot;Wouter&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Aj&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Ylja&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Yvonne&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Zoë&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Anton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Carole&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Emil&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Helene&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jolanda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Maartje&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pasca&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rufus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Thijs&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Antonin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Carolina&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Emine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Herman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jomny&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mai&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Menno&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Paul&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sandra&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tjibbe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Aydın&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cityden&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eszter&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iris&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Joshua&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marcus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mieke&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peter_Catherine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sebastiaan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;TravelNest&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Babette&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Daan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Eveline&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jaap&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jurjen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marieke&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mirjam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Raoul&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vibeke&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Anoes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bronte&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Elmar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Harriet&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Joeri&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lydia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mathijs&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nina&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ron&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tatiana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Andrea &amp; Felipe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bianca&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Edo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lisa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Martijn&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nicole&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Robin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Susan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Xanel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alex&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bart &amp; Sylvia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Daphna&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fleur&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lars&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marit&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nanne&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rik&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sofia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vladimir&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Arno&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Casper&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ernestien&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hotel2Stay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jonne &amp; Sjors&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Merel&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Paulien&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sarah&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tom&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Anouk&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Buket&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Elton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hein&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Johan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lyle&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Max&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Okem&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rosanne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tessa &amp; Somesh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alexandra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Benno&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Darragh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jane&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laura&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marjolein&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Naomi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sophie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wilfred&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:neighbourhood:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;De Pijp - Rivierenbuurt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bijlmer-Centrum&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Westerpark&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Centrum-Oost&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Noord-Oost&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gaasperdam - Driemond&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Centrum-West&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slotervaart&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bijlmer-Oost&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zuid&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oud-Noord&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;De Aker - Nieuw Sloten&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Noord-West&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oostelijk Havengebied - Indische Buurt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oud-Oost&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Watergraafsmeer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Geuzenveld - Slotermeer&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;De Baarsjes - Oud-West&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bos en Lommer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Osdorp&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;IJburg - Zeeburgereiland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Buitenveldert - Zuidas&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:room_type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Entire home/apt&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Shared room&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Private room&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hotel room&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption=' Select your Neighbourhood' datatype='string' name='[Neighbourhood Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Gaasperdam - Driemond&quot;'>
          <calculation class='tableau' formula='&quot;Gaasperdam - Driemond&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='airbnblistings.csv' id='airbnblistings.csv_26B1A6A208384D36A3D97291F988FF7C'>
            <properties context=''>
              <relation connection='textscan.128m1qf0bgfpqe19zqxr8185nky7' name='airbnblistings.csv' table='[airbnblistings#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='id' ordinal='0' />
                  <column datatype='string' name='name' ordinal='1' />
                  <column datatype='integer' name='host_id' ordinal='2' />
                  <column datatype='string' name='host_name' ordinal='3' />
                  <column datatype='integer' name='host_since_Year' ordinal='4' />
                  <column datatype='string' name='neighbourhood' ordinal='5' />
                  <column datatype='real' name='latitude' ordinal='6' />
                  <column datatype='real' name='longitude' ordinal='7' />
                  <column datatype='string' name='room_type' ordinal='8' />
                  <column datatype='integer' name='price' ordinal='9' />
                  <column datatype='integer' name='minimum_nights' ordinal='10' />
                  <column datatype='integer' name='number_of_reviews' ordinal='11' />
                  <column datatype='date' name='last_review' ordinal='12' />
                  <column datatype='real' name='review_scores_rating' ordinal='13' />
                  <column datatype='real' name='review_scores_accuracy' ordinal='14' />
                  <column datatype='real' name='review_scores_cleanliness' ordinal='15' />
                  <column datatype='real' name='review_scores_checkin' ordinal='16' />
                  <column datatype='real' name='review_scores_communication' ordinal='17' />
                  <column datatype='real' name='review_scores_location' ordinal='18' />
                  <column datatype='real' name='review_scores_value' ordinal='19' />
                  <column datatype='integer' name='accommodates' ordinal='20' />
                  <column datatype='integer' name='bedrooms' ordinal='21' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Growth Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#e15759' fontname='Tableau Medium' fontsize='18'>Growth Chart</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnblistings' name='federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption=' Select your Neighbourhood' datatype='string' name='[Neighbourhood Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Gaasperdam - Driemond&quot;'>
              <calculation class='tableau' formula='&quot;Gaasperdam - Driemond&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f'>
            <column-instance column='[host_name]' derivation='Count' name='[cnt:host_name:qk]' pivot='key' type='quantitative' />
            <column caption='Host Name' datatype='string' name='[host_name]' role='dimension' type='nominal' />
            <column caption='host since Year' datatype='integer' name='[host_since_Year]' role='dimension' type='quantitative' />
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
            <column-instance column='[host_since_Year]' derivation='None' name='[none:host_since_Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[room_type]' derivation='None' name='[none:room_type:nk]' pivot='key' type='nominal' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[Neighbourhood Set]' />
          <slices>
            <column>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[Neighbourhood Set]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:host_since_Year:qk]' scope='cols' value=' Year' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:room_type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[cnt:host_name:qk]</rows>
        <cols>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:host_since_Year:qk]</cols>
      </table>
      <simple-id uuid='{A29C681C-DFAD-480C-8008-8E842126A9BA}' />
    </worksheet>
    <worksheet name='Map View'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#76b7b2' fontsize='20'>Map View</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnblistings' name='federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption=' Select your Neighbourhood' datatype='string' name='[Neighbourhood Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Gaasperdam - Driemond&quot;'>
              <calculation class='tableau' formula='&quot;Gaasperdam - Driemond&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f'>
            <column-instance column='[neighbourhood]' derivation='Attribute' name='[attr:neighbourhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='Avg' name='[avg:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='Avg' name='[avg:longitude:qk]' pivot='key' type='quantitative' />
            <column caption='Host Id' datatype='integer' name='[host_id]' role='dimension' type='ordinal' />
            <column caption='Host Name' datatype='string' name='[host_name]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
            <column-instance column='[host_id]' derivation='None' name='[none:host_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[host_name]' derivation='None' name='[none:host_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[room_type]' derivation='None' name='[none:room_type:nk]' pivot='key' type='nominal' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[Neighbourhood Set]' />
          <slices>
            <column>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[Neighbourhood Set]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[avg:longitude:qk]' field-type='quantitative' max='566778.87112839508' min='542276.23744942411' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[avg:latitude:qk]' field-type='quantitative' max='6862668.8918118449' min='6848735.631104961' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:room_type:nk]' />
              <text column='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:host_id:ok]' />
              <tooltip column='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[attr:neighbourhood:nk]' />
              <text column='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:host_name:nk]' />
              <text column='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:name:nk]' />
              <text column='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:room_type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[avg:latitude:qk]</rows>
        <cols>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[avg:longitude:qk]</cols>
      </table>
      <simple-id uuid='{CF62538C-30F6-4C4F-8D8C-7D30BE41EEFA}' />
    </worksheet>
    <worksheet name='Median Price'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#59a14f' fontname='Tableau Medium' fontsize='16'>Median Price</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnblistings' name='federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption=' Select your Neighbourhood' datatype='string' name='[Neighbourhood Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Gaasperdam - Driemond&quot;'>
              <calculation class='tableau' formula='&quot;Gaasperdam - Driemond&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f'>
            <column-instance column='[price]' derivation='Median' name='[med:price:qk]' pivot='key' type='quantitative' />
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
            <column-instance column='[room_type]' derivation='None' name='[none:room_type:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[Neighbourhood Set]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:room_type:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[med:price:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[Neighbourhood Set]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' field='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[med:price:qk]' value='center' />
            <format attr='vertical-align' field='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[med:price:qk]' value='center' />
            <format attr='text-orientation' field='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[med:price:qk]' value='-90' />
            <format attr='font-weight' field='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[med:price:qk]' value='bold' />
            <format attr='color' field='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[med:price:qk]' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:room_type:nk]' />
              <text column='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[med:price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[med:price:qk]</rows>
        <cols>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:room_type:nk]</cols>
      </table>
      <simple-id uuid='{54054777-E3E5-46DE-9006-3EE21BEE1C55}' />
    </worksheet>
    <worksheet name='Metric'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnblistings' name='federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption=' Select your Neighbourhood' datatype='string' name='[Neighbourhood Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Gaasperdam - Driemond&quot;'>
              <calculation class='tableau' formula='&quot;Gaasperdam - Driemond&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f'>
            <column caption='Number of Listings' datatype='integer' name='[Calculation_991636360802910208]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([id])' />
            </column>
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[review_scores_rating]' derivation='Avg' name='[avg:review_scores_rating:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
            <column caption='Number Of Reviews' datatype='integer' name='[number_of_reviews]' role='measure' type='quantitative' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Review Scores Rating' datatype='real' name='[review_scores_rating]' role='measure' type='quantitative' />
            <column-instance column='[number_of_reviews]' derivation='Sum' name='[sum:number_of_reviews:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_991636360802910208]' derivation='User' name='[usr:Calculation_991636360802910208:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[Neighbourhood Set]' />
          <slices>
            <column>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[Neighbourhood Set]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[avg:price:qk]' value='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' />
            <format attr='text-format' field='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[sum:number_of_reviews:qk]' value='n#,##0,.00K;-#,##0,.00K' />
            <format attr='text-format' field='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[avg:review_scores_rating:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[Parameters].[Neighbourhood Parameter]' />
              <text column='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[sum:number_of_reviews:qk]' />
              <text column='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[avg:price:qk]' />
              <text column='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[avg:review_scores_rating:qk]' />
              <text column='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[usr:Calculation_991636360802910208:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontalignment='0' fontcolor='#8cd17d' fontname='Tableau Semibold' fontsize='17'>Æ </run>
                <run bold='true' fontalignment='0' fontcolor='#8cd17d' fontname='Tableau Semibold' fontsize='17' underline='true'>Neighbourhood Summary</run>
                <run fontalignment='0'>Æ&#10;</run>
                <run bold='true' fontalignment='0' fontcolor='#72b966' fontname='Tableau Bold' fontsize='12'>Æ </run>
                <run bold='true' fontalignment='0' fontcolor='#72b966' fontname='Tableau Bold' fontsize='16'><![CDATA[ <[Parameters].[Neighbourhood Parameter]>]]></run>
                <run fontalignment='0'>Æ&#10;</run>
                <run fontalignment='0' fontcolor='#72b966' fontsize='16'>Æ             </run>
                <run bold='true' fontalignment='0' fontcolor='#72b966' fontname='Tableau Bold' fontsize='16'><![CDATA[<[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[usr:Calculation_991636360802910208:qk]> ]]></run>
                <run fontalignment='0'>Æ&#10;</run>
                <run fontalignment='0' fontcolor='#72b966' fontsize='15'> Number of Listings</run>
                <run bold='true' fontalignment='0' fontcolor='#72b966' fontname='Tableau Semibold' fontsize='15'>Æ </run>
                <run bold='true' fontalignment='0' fontcolor='#72b966' fontname='Tableau Bold' fontsize='10'>Æ </run>
                <run fontalignment='0' fontcolor='#72b966' fontname='Tableau Bold' fontsize='10'>Æ </run>
                <run fontalignment='0' fontcolor='#72b966' fontsize='10'>Æ         </run>
                <run fontalignment='0' fontcolor='#787878' fontsize='10'>Æ                      </run>
                <run fontalignment='0'>Æ&#10;</run>
                <run fontalignment='0' fontcolor='#787878' fontsize='10'>Æ                                                         </run>
                <run bold='true' fontalignment='0' fontcolor='#72b966' fontname='Tableau Bold' fontsize='12'>Æ                                                             </run>
                <run bold='true' fontalignment='0' fontcolor='#72b966' fontname='Tableau Bold' fontsize='16'><![CDATA[   <[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[sum:number_of_reviews:qk]>                                                        ]]></run>
                <run fontalignment='0'>Æ&#10;</run>
                <run bold='true' fontalignment='0' fontcolor='#72b966' fontname='Tableau Bold' fontsize='12'>Æ                                                                                                               </run>
                <run fontalignment='0' fontcolor='#72b966' fontsize='15'>Reviews</run>
                <run fontalignment='0'>Æ&#10;</run>
                <run bold='true' fontalignment='0' fontcolor='#72b966' fontname='Tableau Bold' fontsize='12'>Æ                </run>
                <run bold='true' fontalignment='0' fontcolor='#72b966' fontname='Tableau Bold' fontsize='16'><![CDATA[ <[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[avg:review_scores_rating:qk]>  ]]></run>
                <run fontalignment='0'>Æ&#10;</run>
                <run fontalignment='0' fontcolor='#72b966' fontname='Tableau Semibold' fontsize='16'>Æ </run>
                <run fontalignment='0' fontcolor='#72b966' fontsize='16'>Average  Rating</run>
                <run bold='true' fontalignment='0' fontcolor='#72b966' fontname='Tableau Bold' fontsize='12'>Æ </run>
                <run bold='true' fontalignment='0' fontcolor='#72b966' fontname='Tableau Bold' fontsize='10'>Æ  </run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#72b966' fontname='Tableau Bold' fontsize='12'>Æ                                                    </run>
                <run bold='true' fontcolor='#72b966' fontname='Tableau Bold' fontsize='16'><![CDATA[<[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[avg:price:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#72b966'>Æ                                                                      </run>
                <run fontcolor='#72b966' fontsize='15'>Average Price</run>
                <run bold='true' fontcolor='#72b966' fontsize='15'>Æ </run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D5395035-EC85-4B5B-B718-7E2D9993BF2C}' />
    </worksheet>
    <worksheet name='Number Of Listings'>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnblistings' name='federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f' />
          </datasources>
          <datasource-dependencies datasource='federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f'>
            <column caption='Number of Listings' datatype='integer' name='[Calculation_991636360802910208]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([id])' />
            </column>
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
            <column-instance column='[neighbourhood]' derivation='None' name='[none:neighbourhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_991636360802910208]' derivation='User' name='[usr:Calculation_991636360802910208:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:neighbourhood:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[usr:Calculation_991636360802910208:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' field='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[usr:Calculation_991636360802910208:qk]' value='center' />
            <format attr='vertical-align' field='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[usr:Calculation_991636360802910208:qk]' value='center' />
            <format attr='text-orientation' field='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[usr:Calculation_991636360802910208:qk]' value='-90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[usr:Calculation_991636360802910208:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#eaf2e6</color>
                <color>#e3f3db</color>
                <color>#dcf5d0</color>
                <color>#d5f6c5</color>
                <color>#cef8b9</color>
                <color>#c7f9ae</color>
                <color>#c0faa2</color>
                <color>#b8fc96</color>
                <color>#b1fd8b</color>
                <color>#aaff7f</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[usr:Calculation_991636360802910208:qk]' />
              <text column='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[usr:Calculation_991636360802910208:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[usr:Calculation_991636360802910208:qk]</rows>
        <cols>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:neighbourhood:nk]</cols>
      </table>
      <simple-id uuid='{97C9905B-0E3E-418F-B5E2-A501BE339048}' />
    </worksheet>
    <worksheet name='Room Types'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ff9d9a' fontname='Tableau Medium' fontsize='20'>Room Types</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnblistings' name='federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption=' Select your Neighbourhood' datatype='string' name='[Neighbourhood Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Gaasperdam - Driemond&quot;'>
              <calculation class='tableau' formula='&quot;Gaasperdam - Driemond&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f'>
            <column-instance column='[host_name]' derivation='Count' name='[cnt:host_name:qk]' pivot='key' type='quantitative' />
            <column caption='Host Name' datatype='string' name='[host_name]' role='dimension' type='nominal' />
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
            <column-instance column='[room_type]' derivation='None' name='[none:room_type:nk]' pivot='key' type='nominal' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[Neighbourhood Set]' />
          <slices>
            <column>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[Neighbourhood Set]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[cnt:host_name:qk]' scope='rows' value='Count of Host Name' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:room_type:nk]' />
              <text column='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[cnt:host_name:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[cnt:host_name:qk]</rows>
        <cols>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:room_type:nk]</cols>
      </table>
      <simple-id uuid='{980FEC46-8BF8-4D2B-B356-B527EA2AA624}' />
    </worksheet>
    <worksheet name='Top Host'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#edc948' fontname='Tableau Medium' fontsize='16'>Top Host in the Neighbourhood</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnblistings' name='federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption=' Select your Neighbourhood' datatype='string' name='[Neighbourhood Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Gaasperdam - Driemond&quot;'>
              <calculation class='tableau' formula='&quot;Gaasperdam - Driemond&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f'>
            <column caption='Number of Listings' datatype='integer' name='[Calculation_991636360802910208]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([id])' />
            </column>
            <column caption='Host Name' datatype='string' name='[host_name]' role='dimension' type='nominal' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
            <column-instance column='[host_name]' derivation='None' name='[none:host_name:nk]' pivot='key' type='nominal' />
            <column caption='Review Scores Rating' datatype='real' name='[review_scores_rating]' role='measure' type='quantitative' />
            <column-instance column='[review_scores_rating]' derivation='Sum' name='[sum:review_scores_rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_991636360802910208]' derivation='User' name='[usr:Calculation_991636360802910208:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[Neighbourhood Set]' />
          <filter class='categorical' column='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:host_name:nk]'>
            <groupfilter function='level-members' level='[none:host_name:nk]' user:ui-manual-selection='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <natural-sort column='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:host_name:nk]' direction='DESC' />
          <slices>
            <column>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[Neighbourhood Set]</column>
            <column>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:host_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#4e79a7' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <color column='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[usr:Calculation_991636360802910208:qk]' />
              <size column='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[sum:review_scores_rating:qk]' />
              <text column='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:host_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-transparency' value='249' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{CD492B35-7CEE-494E-BA1B-B65FF1E6799C}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#f28e2b' fontname='Tableau Semibold' fontsize='16'>Overview Dashboard I</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption=' Select your Neighbourhood' datatype='string' name='[Neighbourhood Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Gaasperdam - Driemond&quot;'>
          <calculation class='tableau' formula='&quot;Gaasperdam - Driemond&quot;' />
          <members>
            <member value='&quot;Bijlmer-Centrum&quot;' />
            <member value='&quot;Bijlmer-Oost&quot;' />
            <member value='&quot;Bos en Lommer&quot;' />
            <member value='&quot;Buitenveldert - Zuidas&quot;' />
            <member value='&quot;Centrum-Oost&quot;' />
            <member value='&quot;Centrum-West&quot;' />
            <member value='&quot;De Aker - Nieuw Sloten&quot;' />
            <member value='&quot;De Baarsjes - Oud-West&quot;' />
            <member value='&quot;De Pijp - Rivierenbuurt&quot;' />
            <member value='&quot;Gaasperdam - Driemond&quot;' />
            <member value='&quot;Geuzenveld - Slotermeer&quot;' />
            <member value='&quot;IJburg - Zeeburgereiland&quot;' />
            <member value='&quot;Noord-Oost&quot;' />
            <member value='&quot;Noord-West&quot;' />
            <member value='&quot;Oostelijk Havengebied - Indische Buurt&quot;' />
            <member value='&quot;Osdorp&quot;' />
            <member value='&quot;Oud-Noord&quot;' />
            <member value='&quot;Oud-Oost&quot;' />
            <member value='&quot;Slotervaart&quot;' />
            <member value='&quot;Watergraafsmeer&quot;' />
            <member value='&quot;Westerpark&quot;' />
            <member value='&quot;Zuid&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='17' param='horz' type-v2='layout-flow' w='99030' x='485' y='940'>
            <zone h='98120' id='19' is-fixed='true' type-v2='layout-basic' w='99030' x='485' y='940'>
              <zone h='7006' id='13' param='vert' type-v2='layout-flow' w='99030' x='485' y='940'>
                <zone fixed-size='267' h='7006' id='14' is-fixed='true' type-v2='title' w='99030' x='485' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='91114' id='20' param='vert' type-v2='layout-flow' w='99030' x='485' y='7946'>
                <zone h='91114' id='7' param='horz' type-v2='layout-flow' w='99030' x='485' y='7946'>
                  <zone h='91114' id='5' type-v2='layout-basic' w='99030' x='485' y='7946' />
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='92362' id='3' name='Map View' w='46228' x='51298' y='8578' />
        <zone h='41481' id='9' name='Room Types' w='50815' x='241' y='58284' />
        <zone h='44301' id='21' name='Metric' w='50935' x='241' y='15629' />
        <zone h='5640' id='18' mode='compact' param='[Parameters].[Neighbourhood Parameter]' type-v2='paramctrl' w='46047' x='724' y='8696' />
      </zones>
      <devicelayouts>
        <devicelayout name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='11' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97714' id='10' param='vert' type-v2='layout-flow' w='95734' x='2133' y='1143'>
                <zone fixed-size='280' h='41143' id='9' is-fixed='true' name='Room Types' w='95734' x='2133' y='1143'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41143' id='3' is-fixed='true' name='Map View' w='95734' x='2133' y='42286'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{08A203B1-D269-44CC-A365-C8737651638E}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#f28e2b' fontname='Tableau Bold'>Overview Dashboard II </run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption=' Select your Neighbourhood' datatype='string' name='[Neighbourhood Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Gaasperdam - Driemond&quot;'>
          <calculation class='tableau' formula='&quot;Gaasperdam - Driemond&quot;' />
          <members>
            <member value='&quot;Bijlmer-Centrum&quot;' />
            <member value='&quot;Bijlmer-Oost&quot;' />
            <member value='&quot;Bos en Lommer&quot;' />
            <member value='&quot;Buitenveldert - Zuidas&quot;' />
            <member value='&quot;Centrum-Oost&quot;' />
            <member value='&quot;Centrum-West&quot;' />
            <member value='&quot;De Aker - Nieuw Sloten&quot;' />
            <member value='&quot;De Baarsjes - Oud-West&quot;' />
            <member value='&quot;De Pijp - Rivierenbuurt&quot;' />
            <member value='&quot;Gaasperdam - Driemond&quot;' />
            <member value='&quot;Geuzenveld - Slotermeer&quot;' />
            <member value='&quot;IJburg - Zeeburgereiland&quot;' />
            <member value='&quot;Noord-Oost&quot;' />
            <member value='&quot;Noord-West&quot;' />
            <member value='&quot;Oostelijk Havengebied - Indische Buurt&quot;' />
            <member value='&quot;Osdorp&quot;' />
            <member value='&quot;Oud-Noord&quot;' />
            <member value='&quot;Oud-Oost&quot;' />
            <member value='&quot;Slotervaart&quot;' />
            <member value='&quot;Watergraafsmeer&quot;' />
            <member value='&quot;Westerpark&quot;' />
            <member value='&quot;Zuid&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='20' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='23' param='vert' type-v2='layout-flow' w='99030' x='485' y='940'>
            <zone h='5758' id='24' type-v2='title' w='99030' x='485' y='940'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92362' id='21' type-v2='layout-basic' w='99030' x='485' y='6698' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='43126' id='7' name='Median Price' w='41400' x='6820' y='56874' />
        <zone h='9988' id='8' name='Median Price' pane-specification-id='0' param='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:room_type:nk]' type-v2='color' w='8630' x='85878' y='8343' />
        <zone h='5640' id='9' mode='compact' param='[Parameters].[Neighbourhood Parameter]' type-v2='paramctrl' w='9656' x='85878' y='20799' />
        <zone h='47591' id='17' name='Growth Chart' w='76826' x='6820' y='7756' />
        <zone h='2820' id='27' type-v2='dashboard-object' w='1448' x='0' y='6698'>
          <button action=''>
            <toggle-action>tabdoc:toggle-button-click-action window-id=&quot;{4F047528-2086-4DB3-8CE1-CC7D6CF1DB99}&quot; zone-id=&quot;27&quot; zone-ids=[21]</toggle-action>
            <button-visual-state />
            <button-visual-state />
          </button>
        </zone>
        <zone h='42891' id='28' name='Top Host' w='35667' x='48582' y='56404' />
        <zone h='10341' id='29' name='Top Host' pane-specification-id='2' param='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[usr:Calculation_991636360802910208:qk]' type-v2='color' w='8449' x='85999' y='27497' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontcolor='#f28e2b' fontname='Tableau Bold'>Overview Dashboard II </run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='43' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='42' param='vert' type-v2='layout-flow' w='99030' x='485' y='940'>
                <zone h='5758' id='24' type-v2='title' w='99030' x='485' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47591' id='17' is-fixed='true' name='Growth Chart' w='76826' x='6820' y='7756'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5640' id='9' mode='compact' param='[Parameters].[Neighbourhood Parameter]' type-v2='paramctrl' w='9656' x='85878' y='20799'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42891' id='28' is-fixed='true' name='Top Host' w='35667' x='48582' y='56404'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10341' id='29' name='Top Host' pane-specification-id='2' param='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[usr:Calculation_991636360802910208:qk]' type-v2='color' w='8449' x='85999' y='27497'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43126' id='7' is-fixed='true' name='Median Price' w='41400' x='6820' y='56874'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9988' id='8' name='Median Price' pane-specification-id='0' param='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:room_type:nk]' type-v2='color' w='8630' x='85878' y='8343'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F4E7B101-87D2-4AE4-BAE6-BD9D3E352B3E}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Map View'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Neighbourhood Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[Neighbourhood Set]</field>
            <field>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:host_id:ok]</field>
            <field>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:host_name:nk]</field>
            <field>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:id:ok]</field>
            <field>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:name:nk]</field>
            <field>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:neighbourhood:nk]</field>
            <field>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:room_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EFE94471-67DA-4210-BEEE-5189CCA2AD12}' />
    </window>
    <window class='worksheet' name='Number Of Listings'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[usr:Calculation_991636360802910208:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:neighbourhood:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{827AAE06-D38E-40F3-8B26-171BD2F6D6AB}' />
    </window>
    <window class='worksheet' name='Metric'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Neighbourhood Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[Parameters].[Neighbourhood Parameter]</field>
            <field>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[Neighbourhood Set]</field>
            <field>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[cnt:id:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EECB532E-E102-4538-B387-B728BD3DCA88}' />
    </window>
    <window class='worksheet' name='Room Types'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:room_type:nk]' type='color' />
            <card mode='compact' param='[Parameters].[Neighbourhood Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[Neighbourhood Set]</field>
            <field>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:host_name:nk]</field>
            <field>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:id:ok]</field>
            <field>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:neighbourhood:nk]</field>
            <field>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:room_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C7B9AC4D-45AB-498B-BEC6-DE459E9D57BD}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Map View'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Metric'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Room Types'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='18' />
      <simple-id uuid='{837589BA-FD46-4071-811F-463B0111E697}' />
    </window>
    <window class='worksheet' name='Growth Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Neighbourhood Parameter]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:room_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[Neighbourhood Set]</field>
            <field>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:host_name:nk]</field>
            <field>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:host_since_Year:qk]</field>
            <field>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:id:ok]</field>
            <field>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:neighbourhood:nk]</field>
            <field>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:room_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A721036D-ABD2-4D48-979B-E824B888908E}' />
    </window>
    <window class='worksheet' name='Top Host'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Neighbourhood Parameter]' size='21' type='parameter' />
            <card pane-specification-id='2' param='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[usr:Calculation_991636360802910208:qk]' size='35' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[Neighbourhood Set]</field>
            <field>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:host_id:ok]</field>
            <field>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:host_name:nk]</field>
            <field>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:neighbourhood:nk]</field>
            <field>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:room_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FC5C65D2-CCF0-4178-B3F7-09FDC971EA4A}' />
    </window>
    <window class='worksheet' name='Median Price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:room_type:nk]' type='color' />
            <card mode='compact' param='[Parameters].[Neighbourhood Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[Neighbourhood Set]</field>
            <field>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:room_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0F04C5A7-2288-4D44-BFA8-ED94F5DE38BA}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Growth Chart'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Median Price'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0ayzf8c1j2dr2j1b0ifoo19v2h1f].[none:room_type:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Top Host'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='9' />
      <simple-id uuid='{4F047528-2086-4DB3-8CE1-CC7D6CF1DB99}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO3dZ5Rc53nY8f+909tO2d47OkAAJEiCIkVRhWqWLVmWWyTHJXFsJ/YHn8Q5
      yUmO/SWOneYcl2NZtmTZkRw7tuWjLpk0K0gUgsCiY7GL7bOzOzs7vd365sMsF1guRBIEdhfY
      eX84OGdn7sy9z71zn9vepgghBJJUp9StDkCStpJMAKmuyQSQ6ppMAKmuyQSQ6ppMAKmurUsA
      YesYF/8G7fjnsdLxdz9nW0M//SVs3XjHXxHVJNor/xvtlT/AnB7h7Z7QWoljaKe/duN1/CW0
      M19/1yED6Cf/J2ZiohZPaRb9/DfuaH7Sve1NCSAwTvwu5vwsjtZBql//JazcAubCVRACK3EW
      YRjYuUnM+DmEbWNnJ7Dzi1jJq1jx1xG2wM6MYRcz4PSgKAqinMScOYUw9NVpdn4aa3kGoWWx
      llZ2OG0Z4/ppHL1H0E/8Nsb1MwijhDl7EmtxDCEEoprGnH4VK7cIWgY7O4cVP41dyoGWxs7M
      YM6eRGhVEAJ7eRQzfgFh2wizgjl3CmvhKkII7NQV7GIKa3kKYZYwZ05iJS8jquVaPOV59CvP
      bPZvIm0i55pXQmBOvoLnY3+DI9qAOfp3WInLGCf/GMdPf4nqs7+N90O/QfWFz+OIxTCnD6I6
      ZjCunUXtfAJyp3A9/t8wT/wOzof+PcaF/4ej731o3/23OLoOoo98E/fQIGbOg2Jdw8oquIeH
      MHMeHM0DACiuEI6uR3Ef+hT69RdRHctY8StY0y/geu/vYh7/DyitT6AEZnE2+bEWXsNQFrEr
      fjx79mIvnMFSl9DOfAvvgUeonvoGjnAA4/oB3H29mNMXsOMv4Xr4t7AnvoS5sIBjxydh8fuI
      wF7s3MJW/A7SFll3CaS4fIhqvna01Yoo/k4cTVGMK99BaX4Ue2kEHF4UfxvYVQAcw5/G9/5f
      xdl/FHPiOaySjaO5CwCRG8PWLHD6UTwu1PZHsBfOIKoOVJ/AnDmLs+fhdYGJagHFE0JkriF0
      Ezw+RHEZ5+5PYCdew16eBgGOjsdwP/BJsLTaCnUexf3eX0WkxzFnT+E68M/xPPErWDPHsbOT
      CK2K4glil5YAcB76JTwPfgorOY/nqV/H0dy/YRtbuvesTQBFxfXQz6E9/x/Rnv1P2GYzzs5h
      nANPoJ/4As7Bp3C0PwSVBYRlo/gita8F2wFw9D+FeeFLqG1HUVbmrER2ojgNRKWE4m1CCQ9A
      eRThaMQRacRMxHE0dqyGIIqTaC/8V/Tz/4T7wCewU9cQegH0CgBW8hpq+37s7MQt7xHsxAmq
      3/0tHN2P4ex/L8bZL1D9p/+Bc/AD2MujoJcQWunGBgi2gepEbWpGe+a/YC2M39UNLN3blPV1
      gQR2cRFRzqM2DaGoKsIoYi9PozbtRHE6EeUkdiGFGulHGFlwBFF9IYSwsFOjKMFuVG8Aa/k6
      amwIzAJ2ZhYl2IkaiGBnJsAVQXGCXSrgaOytLdmqYKeuAw7U2ACKy1Nbdi6J4vGAM4yi6Ni5
      BGpkEKgiNB3FF8AuZlF9foQtEKUUauMwiqpgF+II3USN9YBVwc7Mo/gCoAbAyKJ4m1E8vtpy
      sosobid4m1E9/tp7hWUcsd5N/2GkzXGLBJCk+iHLAaS6JhNAqmsyAaS6JhNAqmsyAaS6tq4q
      RLVSpqLpq+/ous6dMHUNw7TWzEfXdd549GSaBpYtELaFYVpvMSeB/hb1imzLxLTsO4pVqj9r
      qkIIW+eb3/w2Dz5ylIDTomi6GL10lieOHmF6Mc9gVxPj04tcu/g6D7/3afyqgT8SJZ/Ns7SY
      oKuvD123scwqZrWC0xdm8epx5uhAKS3w6IMPsFy0yCZm2HFgD1MTc2i5BareRvoaXZy8lODJ
      x4+i5xcRnghu1cShgGGDpmc59fJFHnz8KA1um7yu0tLgZjaZZ7C7hRPPfwffjqd4ZEfrVm1L
      6T60phxACMHFs6dI5DQWp8eJtvWg2hrVQhafP0TRdvBDH3ma5599ho99/GMsTV3k2JlxvF4n
      fXsOcfX1YzS0DlLNJ8gu5fnhz3yayZFXWDb9LKZSUE4Riraj2ja6UzAca+BKIsWOHUNMjF0j
      3L6LysIVbG8rDiOPoUDICel8hUOPPcT5U+O4XBoC8LpU8hWTwSYvZ+aKvG9fB0lXHw/LBJBu
      w5sqwxlouiDgD7JjaABvrAOrWsTb3kxJuBn0ubh4dZy+rhZmEim6e3ZReGmEDz31QU6fG2XX
      /sPMz87QEG2iva2XkN9LuLGFrtZuXnj5JH3Dw6i+GBhVVKfN2JVrRLv7iUVjVDu6yOWTdO44
      SGV5HtvTiUPPkSvp9PS109XWRqanDFRRLI2irrKz3c3icpGj+1uZWVygfad3a7aidN+6o5Lg
      cn6ZpaJFb0fLbX83tTDHdCLNAwf243Qo7zYESbojsiqEVNfWXAJZ1Ryvnr5EY0sbQ73tVA0b
      v8dJsaIT8nsplKoE/B7K5SoNDUHy+QLBYBBd03C6XMxPXibQuRenUSIUClAslnA4VFweHx5X
      bVFaPsmLpy4Qa27j4N6dGIZBuVwi4POBww22jmEJhICAz0OxrBH0eymVSgRCDZSLeeKLS+wa
      HtqSDSZtL2vOAPOXzkDXDqaujtEShOdfu8pHnjzE888dY+ehw5QrNtGgikcVpJYKzCzEGRoe
      pKR5iAUEaDlC7Tt47dhzDA4NUbFULMsgFmlhuLeRRFajswGmskA2RcYo0tExSCY5wcToJEpD
      K21hN7liiUioAafXjcsyqODA73ZQ1Z04PS6EsHjwgf1buNmk7WLNGaC5r49jp0dQVBfZokFn
      U4ylTJ6+7mZC0TayC+fRfI1UyzrRxhhqIEBnewzF0052/grZqo6ZTtPd2wOKSn9/HxWtiqrb
      +BsaGWwALbfI5NgFmpvbaIy20NvZSjETp6Wtg5aeAbB1QpEqYZ+bbKlMrlgi3NzCQHcrY2MJ
      iqUCvkBwa7aWtO3c9j1AfH6ezo6Ot/+gJN0H5E2wVNdkXSCprskEkOqaTACprskEkOqaTACp
      rskEkOqaTACprskEkOqaTACprskEkOqaTACprskEkOqaTACprt0yAWxhc235CifmXiaen9nw
      ICYz45yeP35H8xhPX+X47EucXzyDbq3ty6hqVjmTOHlH87+Vcwuvc235yl2fr7R51g+SJwTf
      uvY1Ts4dw+VwM52bRAhBTsuyVFrEEhZCCNKVFMuVFEIILNtiqbRIXsth2RbpyjLZapqKURtr
      q2JUSJWT2MKmYpQp6gVy1SxCCDKVNPHCLHP5WWxhkSonyVYztWVWMxT1AsuVFJqpsVxe+oED
      570WP066usxkdpyvnP8zLNtiuZyipBcxLJ2SXgSgbJRW51M2ShS0PEulJIZlsFROYtkmQgiy
      1TR5LQtAXstRNkqr6yCEzXJ5iencBKlycqN+G2kTON/8hmmbjCy8xr977De5tHQOn9NP2Sjz
      zdG/Q7OqtAU7eaD1MC9PP8dyJcXR7vcSz8+yXEkSdDfwwf6P8oen/ju7mvYyX5jlswf+BX99
      8csE3Q20BTto9DXz6tyLeBwejnQc5ZXZF/E4PbQGOriausyFxTPEC3N8cteP8/LMc6iozBVm
      6A33M5uf5sf3fI7+6K3bAw9Gh9nRuIffOfafSVdS/OmZ38fn9PPxHZ/m+NzL7Gk+wFcvfImA
      O8hgdAeqonJh8Sw2Nh6HB8M22Nv8AD6njzOJU1jC4qm+p7m0dJ6SXiSrpXlf79OkykkmsmNU
      jDJN/tvvEUO6d6wfI0xRAAVb2CioPDPxbapm7Uge8URZKM5TNTVQFILuEMnSAu3BDvJaHss2
      sYRN1BfjM3s+i1N1cX7xLJawafa3sFRaBARRb4xfOPxvuJy6yEeHf4QjHY8BoJlVVNWB1+ld
      PbK+r+9D9IYHONz+CAORIUpG7Uh+ev44f3z6f60e2devh4phm/zswV+iI9QJwHh6FKfqpCXQ
      ykJxHoD9rYd4sP1ResL9PNz5Hgp6ngvJs/zwzh/jA/0f5ULyLADv6Xkf+5oPUtQLXEld5DN7
      Psuupn1375eQtsS6BHAoDh7qeJSvXvgimWoaRVGYL8Yp6kWUlYG/JjLXABArPXxWzAoHWg8z
      m5+mapbJazmem/weuqUxFNuJYekEPQ0MxIYBhdZgOy7VRYu/lZNzx7i0dA6Aq6mLeByetx0f
      GOChjqP88kO/TsB9o33wpaXz/O3lr9AXGSTgChJ0B4l4Y6vTO0JdVMwyEU+M/sgP7lWiNzzA
      C9PPcHzuJfoig2snKhDzNfHi9LNMZuV4Yve7WzaJtIXNbG6KvJajs6GHsCfCWPoKEW+MilGm
      I9TFeOYaUW8MVVHxOn3M5qZoCrTgd/r54tk/4sODn6CroZcGT5il8iILxXnag104VAe6pdEW
      7MCwDMbTVwm4QzhUB2FPhNncFCFPA35XgIKWpznQSqq8RNQbI6dlCLnDhL2RdSsyk5siU1km
      6A6t7rTXM6MMx3ZjCZPr6TF2NO5moTjPUnmRroZeLNsEFFRFwbAN3A4PVbNCa6CdiewYTsVJ
      b2SAeGGWiCdK2SjhUB0EXEEmsuMEXEFC7hCN/uYN/6GkjXHX2wRXjDKn5l/lyd4P3s3ZStKG
      kI3ipbomC8KkurbuMejdcHnpwupTnJZArbvyZGkRgCZ/C3uaZa9u0r1hQ84AQXeQmK+Ry0vn
      SRTnCbhCxHyNXE1dYr4wuxGLlKR3ZUMSoCfcT19kkLyW4+GOx+gO99IfGSJbTfNI5+MbsUhJ
      elc27B7g5Nwx9rY8gN8VAOC1+ePsatpL0B3aqEVK0m3bkASomhVeT5zkPd3vQ1EUNLPKa/PH
      ebznqZWSZkm6N2zIY9CSUWKptEBveABFUSgbZRaL8/RFBmUCSPcUWQ4g1TVZDiDVNZkAUl1b
      kwBCCM4mXltt5LJYTLyjmaTKSZbLqXcVgGZWubB4loKWByCen12tDTqXn17XuqukF7FFbUT4
      ycz4O6o5Kkk/yNoEQJAoxpnIjmMJi0QxTlEvYAsbzdTQLZ2ClidRiFM2SiQKcSpGmapZZbmy
      xGIxgRACW9jM5WeomlVM26RilEmVk6s7a0HLkyjGEUJwNXUJzaqu3hxP5yZXq1lHvDGcqoOi
      XmA2P41hGZyIH2MiM0bZKNHob0YgKGj5lem1ZEmVkywWExiWTtkoMZObwrTNzdyu0n1i3SVQ
      S6B1ZWetHWWvpC5iWDrJ0gLL5SVOz5+gwRPm+OxLNHjCqw1GDNvAFjZj6aucW3idiDfKuYXT
      lPQi/zjxrdUGKHktx2R2HI/Dy+WlC0R9jbQE2lfLC242kRlHt3TOL56hydeMbmlEvTE6Qt14
      nT5GU5cwLJ3X5l+lydfMyMJpxtOjVMwKRb3AUjnJyMJpWgJtq80zJelmt7gHUNjZuIfR5cu3
      /ELQHSTgDtLgCRNwB1GoHbmj3hjNgVaKep50JcVCcR6fy48tLAYiw+xrOYiiKKQrKdqDncR8
      jZSNIg7FgUN1oCo/+HakLdjBZHacillGVVScqnPN5xv9zfhcfgCy1TSdoW48ztqo8Z2hbiZX
      zhiS9Ga33OvCnghFvYBlW0S9Ma5nxt6yDo+iKCwU57m8dJ6uhj5ag+3YwiLgCqIoKi6He/Wz
      bcEOpnITXE1donmlotzNDEtnKnudZGkBYPWSyqW6SVdSxHyNjC1f/YFH9GZ/G5eWzhNfide0
      TdwOD8uVpXe+VaS6saYc4I0/FUVZc3NpC3vNEfeN6Td/7o3rdlVRV3dadaV98RvfubEcGwGr
      Z4+bp9d6XajN+8Z0gS3EagyCWnvlNSuyEktRL+B2eBhLX6Un3EvIHV6NXxbCSW+27QrCTMtg
      tjBD2BMm6m2UO730lrZdAkjS7ZAFYVJdkwlQh2Zyk/zj9W+teTKWraZ5YeoZXpl9AcPSyWs5
      np/8PucWXkcIwXh6lNmVnjdei7+6bQogN6RJpHTvsmyL74x9nWw1zeH2h1fLX0YWThP11lrt
      GZbOteUrHGh9kNOJEwAkinEaPGEmM+Psaz20be6t5BmgjgghGFk4zY7GXWs6FAN4svdDdIS6
      WCjFaQ10rJSci9U+kgDOJl6jaBTY33JwC6LfGDIB6ogtLJ6d/A4FLU+mkl7Ts/V4epQvn/sT
      Pj78o+xu3sdP7ftZSkaJdCWF11ErVGwKtFDUC2hmdatW4a6TCVBHFEXlx/d8jv2th/C5fDT5
      W/ju+NcZT4/yT5PfpTXQylj6KteWr3A5dYGKUSZZWuBwxyMAdDf0sq/5IM9Nfm/b3APIx6B1
      SIhapcdmfyvpaoqgK0S2mkG3NAAi3ihep4/FUoJmfysBd5BMZRmH6sTn9LFQnKeroXdb3AfI
      BJDqmrwEkuqaTACprslygDrwRgMiVVFp9rfeshbuG+L5WWK+xtXq5dudTIA6UDHKdIZ6CHsj
      nJ4/QcQXYyI9hkN10N3QS7q6TFugg7n8NB6nF1VRyVSWSZYWiXijmMKkxd/GTH6SJl8zhm3g
      dfqI52dRFZX+6BBO9f7cleQlUJ2Yzk1wMTlCR6iTy8nz9EUGcalustUMs7kpykaZnJYlXUmh
      WRrjmWvsaNzNXH4aBCSKc2QqaebyM8zkptAtHd3S6I8O4lAcW71675pMgDrRGx7AtE3UlZ3V
      sHW6Grpp9DcR9kQ5nTjOzqa9q583bQOBYF/LIdqCHUxkxmj0NVE1qygoNHjC7Grax7XlKyyV
      F7dqte6YfAxaB1LlJYLuIB6Hl4nsGL3hfiYy4zgUB93hPhRgMnudHY27Wa6kCLlDVIwKi6UE
      fpefzlAP45lRehr6yVbTOFUnIU+YmdwkCgp9kUEc6v15FpAJINU1eQkk1TWZAFJd27BnV6Zt
      Ylg6XqdvtcG6Zmmr/Q25HC4cihPNquJUXfftYzTp/rYhe50Qgr+9/BUuJc/xG+/5TRo8EQSC
      b499jXw1y1Rugo8OfZJMJcVk9jqWbfIzD/yrW47/K0kbaUMugWbz0ygoxHyNNxakqHx690/z
      6T3/jIAryJ7m/VxaOs/PPPCL7G7ez9mFUxsRiiS9pbueALaweW7yezzS+R5sYWNYxprpJ+aO
      caD1MCF3A4fajvDFs3/I+cUzVLdRIwvp/nHXE6BqVnEoDl6cfpZMNc3FpXNMZMYo6HkqRpmR
      hdc42vVeFEVhX+shfvaBX6bBE6E33H+3Q5Gkt3XX7wH8Lj+fe+BfIoTNt8b+gSMdRzk28zxe
      pw/NrPJo1xM0eMIAzOamuLx0nr3NB9aUQkrSZpEFYVJdk+UAUl2TCSDVtVsmQNWsYNnWpgVR
      NavktRwVo/K2vQ0Ylr46RJIk3al1CSCE4Pmpf+Ty0vlNC+K1+VcpGyWmcxNMZMfXTY/nZ1fH
      K8tWM2grvRdI0p1a9xQor+VoC3awXEkhhOBM4hSH2x8mVU5SNSuUjBIKCqZtMNy4m9Pzxyno
      eR7tfIKF0jyGpRPxxgh7IoynRwm4g5i2SVuw1uLIsk12Ne1b0+TOqThpCbQR9cY4v3iGjmAn
      s/kpSnqJ7nAfc/lpBAKH6iBbzeBxerm8dJ6gO0RJLzAQHaakF1e69tDpbOimJdC2qRtSuj+t
      OwNcTV1kOLYTl+qiYpaJeGMsFOeZzF6nJdDGYnGetmAHqcoSuqWxWEzwgf6PEvI0EHAFcTs8
      zOWnubZ8mT3N++kJ91E2SlxNXaSroYfmQBtj6dE1y9QtnXMLr/N64iT7Wg7idnjwOn24nR7i
      +Rlag+10NfTS5G9Bs7TVArbB6A56wv2kK2mmc5PsaT5AxBdbV/gmST/IumFSM9U0C8UEQXeI
      0dRleiP9TOUmUBUFp+rCEha6pbG7aR8OxUlXuBen6mQyM44tLPojgzhVJz6Xn4JeQDNrFeAc
      ioOqWcXj8DAYHV4ThNvhZn/rQQzboGpWuZgcIegO0RseQFGUlZFh3vreQFXUle9X7vpGkrav
      NZdAuqWzo3EPA9EhhBCMLl/CqTrxO/10NnSjKirDsd1kqmlURSXijdHoawJYbTanmRoRb4yB
      6BDT2dqQp4qisr/lASYz13E73LgdnjVBNPlbUBUH7+l+kguLI/SE+1gozuNUXYS9UdqCnYym
      LuFx+oh4o7hUN03+ZhQUPA4vQbegI9TFTG6Ckl4k7JGV6qR3ZsMKwnJalmRxgZJRpKuhhyZ/
      y0YsZtVCcZ6iXiBdSXGo7ciagfkk6QeRJcFSXZMFYVJdkwlQB4QQTGbWl69Isme4bc+wDP7+
      yleZzk3yYPsjfKD/o4wsnOaV2Rf4hUP/GlVx8PdXvkqmmqYr1MMP7fg037v+dSYy4+xp2s/7
      +z+y2qT1TOIkJ+LHCHsifGbP5/j22NdIFOM0+pr59O6fxuVwbfXq3jZ5Btjm5gtzZKppHu9+
      ike7nsASFppVpaDnESv/nuj5AD9/8Fe4nLrAVPY6k5nr/OLhX+Pc4utkqssAlI0SL0w9w6d2
      /SSf2PFjqIrKg+2P8IuHf435wizZanqL1/TdkQmwzXWEuoj5mvj+9W/ywtQzOBQHD3e+Z7U7
      Q6/Ti8fp4S/O/QkPtj+CZmlEfY14nF4aPBEKegGAgp6noOd5cfpZ/vTMH1A2ioS9Ub5y/ov0
      RQZp9Ddt5Wq+azIBtrmKWebDg5/ggwMf42JyBMPS1043yvzFuT/h/f0f4UMDHyfqjZGupKia
      FfJalqA7RLqyjN8VIOgO8cmdP0GTv4mFUoK/PPcFDrY/xKd2/eRql4v3G5kA25xmVvnby1/h
      +NxLPNTxKJql8fnTv4dA8OWRz3Nt+QpC2Dw78R2+cOb3CXkaGI7t4s/O/CGH2x/G5/Txfy/8
      OT6nn8d73s+XRv6IgDtE1BujalY4PvsSn3/991guL231qr4rshygDgghuLg0wv6WQ1sdyj1H
      JoBU1+QlkFTXZAJIdU0mwDZhC5u/vvhlykZpw5axWEzw6uxLXE1dZPxNbTqup6/dl4Nny3uA
      bWIuP01JL1IxK+xp3k+8MEdfeIDrmVGa/K0sFOdRFZXB6A7G0ldJlhIcbDvCQnEe3dLZ3bSP
      +cIcFbO80t5jP2PpK1jCZiAyjM/lY74wR9Ws0B8Z4tT8q7QE2tBNDYfqQEFhIDrMeGYUIQSd
      oW7mC3OYtkFHqPue7fdVngG2idncNEOxXeS1HC7VTbKYoGQU0S2dS8lzRLxRForzVMwyV1MX
      ebjzcbxOHw7FQbqSIl1JsViaZ0fjbipGmbn8DKZtEnAFGF2+tLqceGGWa8uXaQ92kiwt4FAd
      DEZ3kK6kyGs5bNtiOLYL3dJJV5cJe6Ob2r78dskE2AZsYVMyikxmx9EtjYpZJuAOciE5wlBs
      F4qiEHAFONR2BLfDQ0+4H6/Ty8XkCJ0NPbQG2hEIoFbnx0agKApuh4cmfwu7buq1rzPUzc6m
      vfSE+3A73Kut9gBURcEWte8qCrhUFw2eMA+0PbRFW+btyQTYBipGmQOthxmK7eSx7ifJazmG
      Y7vxOjy15qYtB5nLz7BQnEdBoXmlcVJfZJCp7DimbRBwBWkJtDGeGaVslOhq6MEWNolCfLXj
      4oArSMNNre2a/S0rzVWhJdBO0N2Az+Xn2vIV3A4PDZ4wiUKc0kp1inuRvAeQgFph2XRuAt3S
      URWVodjOrQ5pU8gEkOqavASS6ppMAKmuyQSQ6ppMAKmuyQSQ6ppMAKmu1XqFWIrDyIXaO/4G
      OHAQQv63+NptOvUy5G6qpDW8H/o67978Jeldqp0BKkXIlGDXbjDy8MqJ2tRyAS5fgMkpsAUg
      IJ2Ei+chkax9JpWoTb92BWbikFqASxehfFMf/r2D0NoIi2nYsQdCbrh0CUwbtDJcuQqFHIyO
      wfR1GLsOlg1CwPwMXLwIhZUEyqVryx8bB2PzBvGQtqcb/QK5vNDVA7kkTCyDWYVvfwNauiF7
      FdIFGGiG7z0DfQO1nfCxD0J+Fi5PQVcbXHsV+gYhn4KCAY+uNMFr7QChgWOqtgzFhBefgXAL
      6EmYS0HMCyePw/AQzE1C1YKwgBPnoaMZrlyDH/kYfP870NEP1hI0tUM0sCUbTtoebiRAZh7+
      8s/B7YOnnoZMEkQA3vsELEzCq5fAU4HOIXjsKARUmJmBCNDWAw8fgukpOPwITJ2D/Fv00a86
      YWgApqfBXoaBvYAJ/igcfQwuuSG5BPkSNERq/6cnIadBQxBmp6GjC7z3X0dM0r3lxk1wtB0+
      8CTYFjid4PGAXoaKDtkseL21/4U8mCbkcrXX79bAMMSvw2KhdvYAwK4tP5OpLd/lBsuCSAwe
      Pgo+Jzz4OHz4aSilYHL2ztZeqns3PQVSoHMAHtoLz34f1AbY1QN/91dwYRwePAx9O8FjwFf/
      ErIm7N7x7pcciEHEC40d4F45EZXS8Ff/BxbysGc37D4ARgGefxZGzoNpwcmX4ZvfgJIFHa13
      tvZS3atVhhOidpPrUGs3nrYN6kpu2DYoyo3XN09XlNrfcONvdWUecOM7a77nAAVYXoTjx+DA
      49DTCotT8PJ5+NTH37Q8uxbbG++9MZ+bPyNJ71Lt0Kso4Kg1aqj9fVMvX4439fj15uk374Rv
      vL/SQOItv3flAnQMQ9fKwBkuDzTFbrE8FW5+683zkaQ7IKtDS3VNXkNIdU0mgFTXZALcw9LJ
      ec5duIxpv81Vqq1z7swZRi5evS/75tlKcoSYe9j5kXPs3dXP86cuElOKRNp6qWbmEb4odnGZ
      gmYRDXnZve8g7uoi7t6nGRsbw6GqlEtZChUY6mlhfGaRIw8fwSUPd+vIBLiH2UaVf/j2C7zv
      ySMkrQ6S518CdzeqfQ3DFoR8Ptr6w7DSDYmiwPTkJKrHi1Yu0u5T+ftnxznQ10K+YtEYkE/P
      3kw+BbqHTV0fp6k5ykwiSyWbrJ0BsvMIbxSPauNyOmltCuINNbM8N46jcYDKxEmu250sXnqR
      zsF9DLSGmEzmOHDgEH63PAW82R0lgG3bqLIw6p4Sj8fp6OggnUnTGGvc6nDueR3vSeQAAASp
      SURBVO8sAYRY7fELUSuVFUJgWdZqr2CSdD96R/cA1XyKqzNL9HS1MzM5icvfwN5dQwghcMhS
      Wek+9o6uX9KLSzg8Lubnp2ls6cUnHydI28Q7OgM093STGpsm2tROMTOPJ7j115Yvv/wy4XAY
      l8tFIpHgySeflGcj6ba9owRweUMc2L+v9qL93qiCnEwm8fv97Nmzh7m5OUzTlAkg3bY7egpk
      WdaW7HS2bZNIJBgZGSEQCLBz507a2trkDbl02+7Li3lVValUKhw5coS2tjZmZmawLNlAXrp9
      G3oGEEKgm/f3julUVRyO+/I4Ib0DG1oVIlOo8nO/8/WNXMSG+/mPHeJHHq+PvvLrkTy0SXVt
      XQIIIVhaWqKqabf6vCRtK+sSoLR4jX949lUunBvZingkaVOtSwB/Ux+DjR4UT2gr4pGkTbXu
      JriamSenKXiq8hJI2v7WnQEUVaBpb9GtoSRtI+sSwDZtDNNAM/StiEeSNtW6BHAHI7iEjlat
      bkU8krSp1iWAXsrS0NiKbsjLIGn7W3MTLITNa+dGEbpAcfhunsD1qyO4Y33kkzO4g1GG+3s2
      O1ZJuuve9BRIYWhomMm5JC2dN3bwfHoRzVao5pZpiHZjaFls28a27bfsh2Y7VFATwsY0za0O
      Q9ogaxNACE4cfxVfuBldSbBzoJYELm+AgNdF0XKTSU3jDkRQVfVtm0Ruh/r5iqLidMreY7ar
      Nb+soqr86E98FqE4EfaNo54vEKJ3cO/KK3npI20f6w5tIy99gymtCRc6n/jIB7ciJknaNOsS
      YPjAw4SLgmpVPgWStr/11aGrOV489jpzifgWhCNJm2t9ZbjmHnyUcLvuYAA8SbpPrEuASnqe
      jh2HsbTiVsQjSZtqTQIIIVgqCqzsDJGm9q2KSZI2zbozgNPlpmrotDSGtyIeSdpUb0oAwdWL
      I+RyRS6PTmxNRJK0idY9Bn3g4CGCLf34XVsRjiRtrnWXQKdf/j7ff+5lTp29uBXxSNI7Vi6X
      SSaTmKZJPB5/V+OjrUkARVF5+pM/hV+UVgeAl6R7VTwe55VXXiEejxOPxxkdHb3teaw7A1Rz
      i7gineSzS3clSEnaKEIIent78fv9lEolhoeHb3se6+4BAi3D7LXieBsG70qQkrRRJicn8fl8
      jI+PoygKhUKBSCRyW/NYlwDFpSnUhh7SSzOEg/13LVhJuts+/OEP3/E81iXA2JVLjMyeordv
      gP5+mQDSnUv/+ZexS+WtDuOW1iXAzl07mKkkiIQCq+/plQIT03M43X4qhTTuQJSdQ32bGad0
      HyufPIWdzW51GLe0LgEc3gas8iWyhRuV4VzeAF6XA2/AgcfdK5tESrfp3h2Ken1bP8WB1+Mm
      k86svpVfnGUxr9EfbiS3OIM7GJNNIqXbcO+O3PMDf1mX60ZRcLitl0faan+3NG39AHmSdLes
      SwCXx4fLoRJtbN6KeCRpU60vCMsmUIItFHKprYhHkjbVmzrGEpTUCA/uCpMtyjOAtP2tPQMI
      mwvnRlAcTiYnZXVoaftbWxlOVTl8YA9XrozywOEjWxWTJG2adV0jRls6eaylc2uikaRNJkeJ
      lOra/wfDsNcOP7YPCgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      iCQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Growth Chart' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2daXAc55nf/z09930DGNwEKYIgeEgkRVqSRYlSdDje1GadrMuVpGSlfCT+
      kKS2vNmqbDnlZCv5kA+5qmxtsrvZ2ngrzirZOLFWWlsHJVkSJVIHL/DADcxgBsfc0z13d7/5
      AALGMQNMN6bnAN7fF5WAnqcfvJx/H+/7f5+HIYQQUCgHFE2zE6BQmol2rwEIIZAkCZIkgWGY
      euS0DUmSoNHUX6tqxVUzdjvmrGbstQcYpd892QIo5HPQGUwoZjPIliR43S6wLAsA6/+tJ2t/
      oFa7Z61uQxAEVeKqGVsURWg0GlUuNu06HgzDKBaXrE9J5TxuXP8MXFFCsVRCcimEOFdQdGIK
      pRWQJQCNzoS+QAcAQMcySHI5GHT1v+pTKI1C1j2pnOcwv7AIW9kIm6YIg0GPsiAC0KmUHoWi
      Lky9pkFFUVTtHUAURfoO8AD6DrCZhr4DUCj7DSoAyoGGCoByoKECoBxoqAAoBxoqAMqBRt5K
      sFDEZ59eBV8UEZ6fxo0bN8AVymrlRqGojqyJWUajQ6fXCUECurr7wGXHwWB1LlYURajlrBZF
      sa3iqhn7zmwUZqMOg13Ousdux/FYM2FKkqTo8/JWJhgGhKw6P6cmxxHoPwyLQbu+KNNuZjg1
      46oV++q9CDQaBkd6vXWPDbTfeDR0IUwoZpErM0jHV2AxmxEJBVEQ1LtqUDZDCMFCLIO7c1HV
      7rYHDVmS1BmtOHp0WK1cKLsgSgS5Qhk6LYskV4Dbbmp2Sm0PnQVqIwolARoGONrnweRCotnp
      7AuoANqI5QSPDpcFJw75MTa70ux09gVUAG3EQjSDHp8dh7pcmArTO0A9oAJoI8IxDgGvDU6b
      EWVBRCZXbHZKbQ8VQBsRiXHo8tigYRgc6fFgmt4F9gwVQJsgEYKVZBZdHisAYHTQh3vzsSZn
      1f5QAbQJhZIAADDqV2euRwZ8uD8fo+sBe4QKoE1I8wU4rcb1/3dYVt8D1oRBUYY8ARCCeHQZ
      JZFAKBUQjSdVSouylaUEjw63df3/NRoGPX47ZhdTTcyq/ZHtBp2fn0WuJCGVSiGyFFErL8oW
      wlEO3V7bpp+NDtL1gL0iywqh0RnR6XUBALz+TqwkEuulEakbVN3YweUUHj/RC1EU1x2QhwMu
      vHt9DoJQn8egdhqPNRrqBi3nOUSW4zALJvC6MpKJJPhCGTaTHgB1g6oZO5rOo8trB8uy62VR
      urx2ZLJFlAQCs7E+tZnaZTzW2KsbVJ4ZzmTD2fOPrf9/T/+QopNS5CERgky2CIfFsOnnGg2D
      bp8NwZU0hvvUsUfvd+gsUBvA50sw6rUw6LZfr44P+HE/SNcDlEIF0AYsx1dNcJUYGVxdD6Ao
      gwqgDVhM8OsrwFvpdFsRTeUg0QUxRVABtAGhlQwCPnvF3+m1LAJeK0LL6QZntT+gAmgDFuMc
      eqsIAACO9npxdy7awIz2D1QALY4kESwnsvA5zVWPOXHIj9t0QUwRVAAtTlkUQUCg11ZfY+n2
      2bGc4FGiBQpkQwXQ4mSyRdgtBrBs9X8qVsPAYTViJZltYGb7A9kCyOd4iBJBqZBFLEFfvNQm
      uJxGzw7P/8Bqh8Rj/T76HqAA2U3ybt74AlxRxNTUDNLRMFLZklq5UbC6C6zbu7MAAOD4wMEU
      wF6nf2Wa4daa5EnQ6c3wuczIFYsQjSw1w6kUOxRN44nR3nXDW7WezH1+G0IraZRKZWg0yton
      tcN4bOT65BL+x9tjePkrpzDS71MUQ7YZLhhegrVsghlFTId5HDvesf58Ss1w9Y8dTeYQ8DrW
      Y1XrEWbVauGymZDki5v2Dcil1ccDAMLRDP7slzfBahg8e/YQbk1HcXKoS1lOcg7WmWy48PhF
      RSeiyEcQJaSzRbjsxt0PBnC014OJhcSeBNDK8PkSXrsygS8mFvEPnjuJ0UE/klwe//kvryqO
      SWeBWhguV4TZqANbo9V3ZMC3LzfISBLBlbEQfvDHl2Ex6vBvvn0JJ4c6oNEwcFgMKJQEZPPK
      3kXVu99R9kwik4fPWdkEV4n+Tifm37ylYkaNZyaSxE/evAWX1YgfvHRxWz1UhgF6fXZE4hyO
      9Hhkx6cCaGFCKxn0+Gy7H/gAi1EHLatBgsvDbWvvwrlpvoD//f49zC+l8NuXjuP4gK9qb+Rj
      Az7ki8p2xdFHoBZmrRBWrTAPCma183SoIEp489Np/MF//xV6fDb8y29exOigf8fG4CMDPsWl
      IqkAWpiFaAbduyyCbWVkwIs7bfgeQAjB/WAM/+pP30NwJY0fvPQknjs3BO0OK+BreO0mJLmC
      oml4+gjUwqT4AlzW2maA1jjW78Orl+9Akoji9YBGQghBii/iz9+6hUQmj5deOI2hbteOV/yt
      sKwG4WgGokSgZeX9zVQALYogSiiWRVgfFByoFYtRB62WBZ8vwb5lD3GrURZE/OLaFN79Yg6/
      +eVhPH6it+YZr61YTHqEoxn0d8rrnUYfgVqUaCoLj90k+yq++h7gbuny6RIhuDm1jN//o8tI
      80X8wbeexpOn+hV/+YHVWqlKpoCpAFqUxTiPzirbIHdjdNDfki/ChBBEU1n8h1c/xs+vjOOf
      /J3z+PvPnYTFKO8uV4kRhV4oZY9AhGBq/C64goCR0RMwaKmO6s1aMwwlHOlx4/WPJ+uc0d4o
      lAT84toErtwJ4RuXRnHuWHdd4we8NiwnsyiVReh1tVtyFL4DSMiXJNh0QCydQ6fTRM1wdY69
      sJLGEyd6t1V9q2aG24jNpEOpLCCZycFmrv3qqtZ4xDN5/PtXP8HpoQ7865cvwqjX1q2a3dpY
      MAwDl9WI0EoK/R2Omj+vTAAMi57uDszNzcNnMqyb4KgZrj6xCSFYTGTR1+HaFqOaGW4rA11O
      BFc4nDrcIevcaozH6x9P4cXzh/HUw4N1j72xMtyxAR/uB+MY6q59RVjxswuRJAQGjsBhrk9J
      PsqvESWCQkmAxaR8bIf7vLg9s1zHrJSRK5Rxdz6Kc8MB1c91fEB+0xDFAnD7OtHhkTflRKmN
      QkmATqupaRGoGkf7vC1RMe7D20GcPRqAQcZzuVL6OhxYSvCyNsnQt9cWZDHOocNllbUYtBWv
      www+X2rqRnlJInj3+hyePXOoIeczGXRwWo1YTvA1f4YKoAUJx7b3ApCLltXgUJcLM5HmNTG5
      Ox+Fx26Cx9E4Y95wv1dWE3EqgBYkEuMUT4Fu5PigH/eatB5ACMGbn07jKxeO7OlOJpfRQT/G
      ZmpfEKMCaEEiD/oB75XRQR/uNqmR3nIyi5VktuFl2wc6nZhfSUOSavubqQBajLXVUq+jeiW4
      WvG5LEhnCyiWG/8e8M7nM/gbZ4cabsgz6FgYtCxSfKGm46kAWoxCSQAhqEvHFw3DoMttQyTG
      1SGz2imUBHw+sYgLI/Vd7a0FhmFwtM9bsy+ICqDFSHIFOG3yLNA7cVyhSWwvfDwWwqmhTlhk
      OlnrxbF+KoC2ZSnBo6uOVR0Od7txZ7ZxL8KSRPDW5zN44Xzz2mc91OPBTCQJsYbGeQoFQJCK
      LWNqNkgbM9SZhWgGgRoqwdVKj9+OxTiHUoPeA6YjCTgsRvhlbOavN1azHgYdizRf3PVYxXeA
      +fASDFIWCZ6WRqwnkRiHbhkb4XdDr2XR6bEiEm/Me8Avr03jhUeHGjr1WYnDD+4Cu1HV+ZRN
      x7CSKcHjsMNu33JLJgRahiCRyaPPTyCKInWD1in2YpyDz2Gq6pasxQ26lWN9XtydW0GPd+dH
      q72ORzydw/xyCt/pf3hb/o3uEzzS78HY7DJOH/bv+PmqArhx8zZEDYNFjQGPPfalLb9lYDIa
      wBdE6PUsdYPWKTYhBFyuBKfVVPWztbpBN3JiqAOvXZnAVy48tOuxexmPj+6E8dTpQeh1lWew
      Gtkn+KFeL974ZGrXc1Z9BBoa6EVsOQpvdwULK8Pg0EPHcPLkKCwG6gatF1zuQTtUfX2/KD3e
      1fcANSkLIj68FcQTJ/tUPU+tuGwmlAQJ/C4V46oK4P79uzAYzchmazcWUfbGTt0g94LRoIXd
      bFC1gcan9yMYGfRta+bdTIYCLkyE4jseU1UAGoYBnd9pLEtxDp0yCmHJ4fiAT7V6QZJE8Mtr
      U3jubPOmPisx3L97jaSqAhBEEa1fVWZ/EVrJoM9fvynQjYwM+FRrpDe3lIJOy6JXpdyVMtzn
      3dULVVUAj5w9D7/PB7tl754USm1E4vJKIcphoMuJ2UgKgrj74pBcfnFtCs+3wNTnVlxWI4pl
      Yce6oVUFMDZ2B4tLIYTDC6okR9mMJBHEUjn4XeosIOm1LEwGLeLpXF3jpvkC5hZTeOSIsgYV
      asKyGgx2OjG3lKp6TFUBHD56HH2dHXC4GmtnPaiUBBFgAJ1KJWYYhsHIgA/ju7wUyuWD26sz
      Pzt1sWwmo4f8O/qCKmYdmhrDR1eu4Oqnn+HO5JxauVE2kOYLsJkM0Kj4GDE66Md9mZvGd0IQ
      Jbx/fQ5fbpGpz0oc69+5cnRFAZjMFlitNpx94jl87UXaEqkRrPUCUPM5+lDAhdmlVN1W7G9O
      LWGgywlXC/ci6HRbkeILKJQqvwdUFEAuy6NQyGNhbhJj49OqJkhZZTHByy6FLhe7xQC9VlPz
      ZpGdkAjB6x9P4oXzR+qQmbr0+uwIrVTuaV1xybHvyAlY3F3weDxIJCoYioiE+ZkphEIRjJx7
      DG5Lc3zf+4mFlQyePKX+o8ThbjemwkmcG97bVTsS4yARgsGu1i+NM9zvw9hstGILpYoCKGai
      +POf/AT9g0PwdQ/icbd78wGMBv2HjiBfkuAy66gZrg6xlxIcPHbjriUDlZjhNnKs34Nb00t4
      uIJJTE7Of/3JJJ463Q9JFFHLxGqjzXAbGQo48NO37+A3vnR42+8qCsBg9+G3futrIOUsClp3
      pUOQXA7C0dEHhmGoGW6PsQVRQiZbhM9l3bVEuBIz3EYO93jxsw/GwbJsxRi15JzJFTEeiuPl
      rzwsq3hXI81wG+nxObGSyoGAgU67+Tta9VNzM+O4NR5ENDxb8fc2bzc6Xa378tNOZLJF2MyG
      PdXHrxWbWY9CSVTcVA4AProdwqPHuvdUua6R6HUsun02BJe3vwdU/QtOHBuG2WzFkeHjFX+v
      1WpbbuWvXYmmc3WpAlELrEaDwz1uxf0DJIngvetzuPRI/Qvdqslwn7fiGkhVAdy+ex9DgwHc
      vj2mamIUIBKT3wxvL6zWC1ImgDtzK+j22eCxt9fdf3TQX9EYV1UAAb8Xd+7ch7+r8aUtDhqR
      GL/nUohyOD7gx3gwLnvSghCCNz5ZdX22292/x2/HSiq3zQtVUQAL03dw4+4EUlwWxeLuG4sp
      e2N1I3zjBOC2m1AWROSKZVmfW0lmkckW8VCv/I7szUavZeG0Grd5oSoKwOntwvBgAL7uQfQF
      dt5TSdk7iUy+oQVkgdXu6hNBeb6gv3z/Hn7zy0fbov1qJc4NB3D1XnjTzyoKoJDjkCnrYGXL
      SHPq7SKirFWCIzA3eGvpqaEO3JyuvYFGLLW64f3MQ+o3ulCLkQHfthpJFSdmy9Cir78X3YGe
      hiR2kFmMc+hw760XgBIGu5z4P7+6V/Pxl6/P4umHB9v26g+s+oJi6RwKJQHGB/uuK94BpFwa
      r7/+Bt555x2MTcw1MscDRyTGIaDSJpidcFqNIAQ1+YLKgoiPxxZaZsO7UrSsBn6XGQvRzPrP
      Kgqge2gE508Ng+MyyBcq76onkoRCsdiU0tv7iXC0voWwaoVhGAx0OjBdQ0PtT+4uYPSQX3bX
      +lbkWL9vkyW86jRoPl+Az+cDz2Uq/JZgeuIewpElCPXfYXegCNepF4ASjvX7cHuXZhKSRPDm
      tWm8eH67j6YdOT7gw70NvdOqmjMefeISMlwWNnulBRoJsWgCBnMeaY8fLouemuEUxCZk1QTX
      4TTX3Dd3r2a4jRzuduL1jyfWz10p59nFFEwGLXzO6tXqaqGZZriNdLrNWIpzKJfLYBimsgAI
      IVgIL6C3tw+hUBB9ff1bjtDA6bahUJSgoWY4xbGLZQESAcwmfc0+oL2a4Tbic1pREiQIEtZf
      CjfmTAjBW5/P4pkzh6Crwzg1ywy3NQev04JouoCA11b5EajExfDaa6/h56/9FZK5SspiMHz8
      NE4/8gjcdaxlf9DgcyWYjTpVt0HuBMtqMBRwYXaxchHZNF/E7GIKZ46279RnJUb6vbj3wApS
      UQAGuw8XLzwCoVymK8EqEomvzgA101YweshftX/Auzfm8Phob9u4PmtlZMCPsdkdBAAAXLaA
      kdFR9HT5GpbYQWMhyqGnCTNAGzk+4MOduei29zdRkvDhrSCeenigOYmpSJ/fjnA0A0GUqgvA
      63EhND+PeLLSLBClHoSjjXWBVsLzoKF2fsum8c/uR3C42w2ndf894up1LEwGHeKZXHUBGAwm
      WK1mLC0tNTK3A8VKMosOlQphyWHrpnGJEPzy2jRevLA/pj63wjDMah+xmZXqAsikE1hcXIbF
      1lr1HvcLEiGIZ/IN2wizE8P9XozN/Po9YGElA1GS0N/haGJW6nKs34v7wXh1AZhMJrAsC6u1
      uc+o+xUuV4RRr922R7UZHO3zbtoh9tdXp/DC+cNt5/mXw+EeN+aWUtUFsLgSx+nTJxFfClc7
      hLIHEpk83C2yqyrgsSLB5VEsi+ByRUyFEzi7z6Y+t2Ix6mE2aCsLIBycx8PnLiDH59DR2dHo
      3A4ESwkeARWaYShBp2UR8FgRjmbw0e0Qzh0NtMSdSW2O9HgqCyAVDSG4nIbbZcVKtH61JCm/
      JrSSQa+/dZ6xRwb8uBeM4fIXs3jmTHtteFfK6CF/ZQGMnL6AUmIBU8EoLjx6puKH56bGcef+
      BErUDaeIcJRD1y5dGxvJ6KAPf3VlEl0eW8s8mqnNYJezsheIYbU4dfbCjh/O5rIgWjMYZtWP
      IUkSNcPJiB1LZ+G0GGQbzMrhMDQ6HVh/fbeq+hwmSITg+XODqoyLWmO99p2r1Qy3EbNeW90N
      ustpMTA0jGwsglgmj07n6lRerYYkJahhtFMz7k6xJYkgXxTgsJrAytlhRYDEX7wKMZ6A7/u/
      A9Zbv94NJpbFv/32Jfhd6t2V1BjrNTeo0hkrxfa8XCaBtKjDkNO8fnI1ps3WFK7WlJyaU33V
      Yif5POwWg2yPTTm8ALFYguMbX0f8x6/A93v/HBpj/VZqPXZTU8ajmbEVXrIZ+Lp6cORQf9Oc
      jO1MROEmGO6tt2F95mmYTp2C5YknEH/lv4AouPVTfs3+svm1CUr2AYsch9LUNExnViclLJee
      htbvR/ovXqUi2ANUAE1gIZpBj8yWotkPPoTp0bNgHmwqYRgGzq//XZSXlpB99z0VsjwYUAE0
      gXCMk1UKkYgicp9chfXi5nZVjFYLz3e/A/6991EYozVclUAF0GDWegHI6atVuHkLukAXWOf2
      biwasxne3/lnSP30f6IcprYVuVABNJhCSYBex9Y8/UkIAX/5Xdief67qMVqXC65/+DLi//WP
      IKaq98SlbIcKoMHE0zm4ZUw3CotLkHI56Pq3FibYjGFoCLbnn0f8x38IUpZX9PYgQwXQYEIr
      GfTK2AXGv/cerM8+A6aGRUbzly7AOHociT/9MzozVCNUAA0mEq99DUDKZlEcG4PpzCM1Hc8w
      DGxf/ZsACLjXX6dV+2pgTwJIJpKgQywPOWsAuavXYHzkEWgMhprjMxoNXN98CYWxO8hf+1Rp
      mgcGxQLg4kv4/OZdqGcn259EUzn4a9gHTCQJ2V99AOvFJ2WfQ6PXw/O97yHz/36O0kzlJoeU
      VRR5gYgk4vqtMYhFESkuB5fZQEsj1hC7VBaRL5Zh0rO7ukCL9+5B43ICLtemY2sujWgxw/m9
      f4TYf/xP8Pzu98F6du/q0uxSkUqQWxpxK4oEwGhYPPn0s5ifnYPLZsaax4+WRtw5dixTgMtm
      gk638zkJIchffhf2F1/cFkNOaURtTw/cL72E5I9egf/3fhcay+53nlbomywHuaURt7Knd4D+
      wQHs/41z9SOayqHDvfuXUIzFIMTj0A8d2vM5jSdGYb30FBJ/8t9AVLzCtyt0FqiBLKyk0e3d
      fQqUf/c9WC9dAlOnO6rl4kVofT6kX/1fdHp0C1QADWQhursHSMrlkL9+A+bzj9btvAzDwPH1
      30Z5cQn85XfrFnc/QAXQQBbjHLp2qQSRv3EDppMnoDHVd18uo9HA893vIPfJJ8jful3X2O0M
      FUAD4fIl2C3V5/SJJCH77vuwPHWx6jF7QWMxw/Pd7yD105+iHFlU5RztBhVAg8gXyyCErDei
      qERpZhaMyQRtZ6dqeWh9Pri//S3Ef/RjiBla+JgKoEEsJXh07tAOlRAC/u23V30/Km8zNRw6
      BPvf+iriP34FUqlyE8SDAhVAg1iM8+jZwQQnpVIohxZgPD7SkHzM58/DcOwYkn/8JwfaM0QF
      0CCCy+kd26Hy768++9dr6rMW7L/xVTA6HTI/+78HVgRUAA0iEueqrgFIxSLy1z6F+cL5hubE
      aDRwvfxNFCcnkbt6raHnbhUUCoAgPD+N69evg8vTzRe7QQjBUoKvOgVauHEThqNHwdp2d4mS
      QhqknK9bboxWC8/3/jG4N95AcXKybnHbBYXmDAYOhwMLizEwGgaiKFIz3A6xi2URkkTAarDd
      BEcIuLfehv3vfaOGMokExTe+D8bkhP6Ff1e/ZE0mOL/9LSRf+UPwFpUqwxECqPJyv/ada2hl
      OAKBaBHw2pDhC7A+uLJRM1zl2KlsCTazATqtdtsMTykYhMZogHFgoKbZH/L4PwWj0dY9b21v
      L7y//y+gUWk7pSCI0KpQcn3NBarUDKd8FKUSYPag0906FY5blUiMQ6fbsu0LTggB/9bbq76f
      Gq+Omo5R1WqwMgYD2Boco0ogggBWjYtNc9ygDJweP3oDHZBT2/WgshCt3AtA4nmUZmZhPHWy
      CVlRADoL1BDCVUxwuQ8/gvn8ow2d+qRshgqgAawk+W1lx0m5jOyVK7A8+eUmZUUBqABUR5II
      knwBXsdmd2dhbAz6vr6K1d4ojYMKQGW4fBF6Lbup6dyq7+cdWC493cTMKAAVgOokMnn4nJub
      YQuLSyDlMvSDB6MZXStDBaAyC9EMOjfUASKEgHvzTViefqqmam8UdaH/AioTifHo2WCCI/k8
      SpOTMJ8718SsKGtQAajMQjSzyQadvfIxTGfPrDe6oDQXxQKIBGdw69YYciV5bT4PGolMHh7H
      6jsAEUXkrlyB5aI6Wx4p8lF8GersGUA+dxdlQYLIUjNcpdgSIcgXy9CzDARBQOnuPTAOB2C3
      y+4PvEbNleEUQCvD1QzB3NR9uLuH4DDr139KzXCbSWVXN8EbDatjlLp8GY4XX9jTOeVUhlMC
      rQxXIwyjwWJoHnn6CFSVxRiH7gfP/0IsBjGVhv7w4SZnRdmI4v0Ag0eG65vJPiQUzax7gPh3
      LsNy8Unq+2kx6CyQiqx1g5TyeeRv3ITl8ceanRJlC1QAKhKJcejx2ZG7eg2mkyfA6PW7f4jS
      UKgAVEJca4dqNSD7wQewPnOp2SlRKkAFoBK5kgCDjkVpagqs3Q6t39/slCgVoAJQiVgqB5fd
      hOzl92B99tlmp0OpAhWASoSjGXQbCMoLIRiOPtTsdChVoAJQiXCMg+PWZ7A89RT1/bQwVAAq
      sRjLwLMcguWJx5udCmUHFAuASCIyXLaeuewr4rEMAl86U/dGF5T6ovjevLIUQSSexsMnRuuZ
      T0WSXAGsCkWVREFUJa4gSMhzPDq/Rl2frY5iAXQEehHPcCCEQJIk1dygSa6AH/3sUxCFpe92
      ghCikqmM4NFHDkPT4Vfs+qwGdYNuZq9uUIYo+tYSLMzPYGouhDOPPgabSQ9RFFVzg4qiqIqT
      UBAE1dyPasVW0w3aruOxFzeoQgFUToQKQP3YVACbaWqjbAql3aECoBxoqAAoBxoqAMqBhgqA
      cqChAqAcaBQ3yZuduIvrN26iIChbgKBQWgGFApAgwIChbj9SmVx9M6JQGohCAWhQLuUQSyZh
      MNB9rpT2RXFZlMNDh5DOleGyUAFQ2pc9WyHWzHCSJKnWvVAtm4VacdWMvWb+UssMd9DGY8/m
      DIZh1v8wNUsjqvUPo1ZcNWOrWRqx3cZjbRwa3yd4C2pd/dWMTXNu/9h7vRDUzQ1KobQj7A9/
      +MMf1ivY/PQ4JqfmoWMlTEzOoEhYhGfGEVqKgxQ5zM3NoawxwW4xVo2xshjEzOw0iiVgenoK
      Kb4AlHjcn12Az6rF9bFx8PkyPK7tjad3Y3r8DqZnwmCZEqamZiFpTVic/AJpjQuaYhLXxybR
      290lO24yGsH0zDSyRQnBmQlEk1noUcKt8Rl0eZwYH7+P8FICHR1e2dt6to2pxCIVmcRyFtBL
      OUxOT4ErAG6HdfdgGxBLeYyPjyO8nEAhHcXsfAhmqw1ffH4NLn83WCmPy+9fRf9gv+ypwnR8
      GVMzM+DyIhZmx7EYz8CklXB9bBw9nS5cu/YFShIDl2N77+TdCM1NYXpqFhoNwcTkDHJlgmxs
      ARoiIB6LIhhegt3pgZatbaTrel8KdHfDYDIik8rh+OmTKPOL0Js60GU2IFEswmQ1I7q4smMM
      rz8Ag04HIZ9D/5Fj0BIBvq5emPQMopE4hk+fAiMUFOdntJjA8SWcPH0c2WQKA/29kCQCh7sD
      DptBUVyntwtmvQ4sU4a74xCsWsDq64LNrAOrN6LT54HJYt49UJWcN41pNo3evgEAEqw2O4Ri
      AaxOJzsuqzeh0+uG2WxGmWgx8lA/0pki+gI+SBLBzOwCujq8inJ2uP2wGnUwGkRYHX1w61kY
      3X44bEYQCTCb9cjyPJQ8egQC3dAZDMjEeYycPg2pwKO7bwBGVkI4HIEkFMFla/9+1FEAEm7e
      HIO/owMWM4vQfBCSxoZ8LoaVXB4DXQFoATi97h2jTNy5BYPdC4/bgsXIAgplEXDnrDQAAAKA
      SURBVHwmhUwqA6NFh+BMECVFu+tE3Lp1Fx1+H/SshOB8CBqjEclkCulUElmeQyaVQTZflB15
      5v4twOSCy25HKrEIrlBCkc8gk8ogFV/CRHAFPreSfsC/HlPrgzEVNTqkkgmkUymkuSw6A93g
      UynZkUtcHBOhKLxuJ6RyAaHwIvRGHVLJNFLpNEBEhENBpLi87NjBqbsosVY4rE7w3BKS+SKE
      7Or48vkC3G4/hEJegQAIbt68Ba+/A06HHsG5IMpEg3QyiUQ6C6vNBqfdhny+9pzr+A5AkIzH
      URYBt9cFLp2G3eFCuZCFAC2MWiCTLcDldGKn9xY+k0KuUILd6UY5z0NvtqKU45AvlmF3ulHM
      cTBbHdBp5WpXQjwahwQNPB4nUukMnA47kvE4JIaFyaBDLl+AxWaHxVT9Ea0SOT4DPleA1e4E
      Keeh0ZshlXLI5oswmc0o5HJg9Ua4nHaZj0CVxtSJdCIOQQLsdhs4nofT5YaOlTceolBCIpEC
      qzfCbjGAz5VgM+sRT6ah1RvgdjpQKpWg0+tlP7blsxy4bB4WqwOMVAK0BkAogM8VYLbaIRZz
      0JmsMBvlriERpBIJlAQJLo8b2UwaVocTfDIBgWHhsluRzmThcu38HdsIfQmmHGioG5RyoKEC
      oBxoaNFKSlshFrPgShroSBFasx0G2e+Cm6F3AEpboWE1uPzOO/jwwyvIpWO49tkXyGY5XL36
      KVLJKO6O3UU0XbtFn94BKG0FozVhyEWQch7De2/+Ama7HfdYLSITn2ElnUI2p8PfPnq05nhU
      AJS2w+MLwOhyw5nvR1LQwcoWobN6YbVa0N3bD4OudtMdnQalHGjoOwDlQPP/Acfa96yvbtwA
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Map View' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Median Price' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Metric' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAZv0lEQVR4nO3daXAc553f8W/33JgLmMENECAIEiDAS6JuH5JsWZZiy9q1vZbXWh/rqmg3
      u5U4ebGVbPLKldpXqcpVqXJ5nWTX8VH2xpEsy7YOW4ctUqJ43zdu4px7MGfPdPeTF4DGYhGU
      aFmgRPb/827QPf08PZjf9PH08zyaUkohhEPp73cFhHg/SQCEo0kAhKNJAISjSQCEo0kAhKNJ
      AISjSQCEo0kAhKNJAISjSQCEo0kAhKNJAISjSQCEo0kAhKNJAISjSQCEo0kAhKNJAISjSQCE
      o0kAhKNJAISjSQCEo0kAhKNJAISjSQCEo0kAhKNJAISjSQCEo0kAhKNJAISjSQCEo0kAhKNJ
      AISjSQCEo0kAhKNJAISjSQCEo0kAhKNJAISjSQCEo0kAhKNJAISjSQCEo0kAhKNJAISjSQCE
      o0kAhKNJAISjSQCEo60ZgIv5M7yx9FssZZGqJjibPXHFOjXL4PWlV6jbtSuWnc4e41DytcZr
      wzJ4avL71CzjXVf05blfcqk49a7eO1ea4Tfzz19Wn0PJ13ht8SUWyrPvuk7ixrdmAKYKYxxI
      7mG6ME7OSDO2fBaAqlkhUVnAsk00TcPvCqChYyuLZGWRslmibBYp14ss1/JkqinKZgmlbJLV
      JQr1ZXJGBgClFFkjTdZIo5SialbI17Ir61YWV7e5hGFVKdTy5GoZKmaJZGWRul0HoGyWSFQW
      sZQFgGnXSVQWqJqVRhnpaoKskSZX+125L849Q8Us0x7oIlVdwrCMRj1S1SUs2yJdTVCqF0lV
      lzBtc7XcGoZVJWOkyBkZivUCpXqRjJFCKdUoP2dkUEpRrBcoru5zppqkYpYvK0O8/9xXWzDS
      vJNj6f3siN0OQKGW5+mpHxL1xtA0jQd6HuFAYg/bWm7lV7M/p2yWqNt1NkWG0NG5VJqgbBbJ
      Gim+sOnrmHadg8m9zJameKj3j1mqLHAxfwZQDDdvJ+gOM758ngd7P8OTk9/na0N/zU+nfkCz
      N0ZvsB+Ak5nDmKpOe6CbbS238OzMk8R8rZiqziN9j/HU1A8IuUOkqkk+O/BnnMocYbo4js/l
      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
      w+mb66Dx/Pgz/PLiU3xt11/KKZC4eVi2xf65vTT7Y3jjfgrGMvlqjqXiAjWrxtzyJSpmmcPz
      +3l8x9dXGmrlNqi4WSilOLJwgIPzrzPQvJn7Nj7IWOYcZ5OnAHC73Gxvu6VxQQzSDiBuQhPZ
      i/RFN+LW3/mJAwmAcDS5CBaOJgEQjiYBEDeculXnR6e+25i18g8h1wDihjOVG6dYK2Arm9G2
      ncwXZumLbmRueYb2YBczy5NU61UGY1vIV3Poms5UfoKB5s2kyglcmovNsWFy1YwcAcSN59Ly
      NCOtO0hXUrg0F5eWp1BKMZOfIlFexK252do6yvHFwyRKi5xKHmdXx23E/DGivmbmC7MsG3nO
      JE9KAMSNZWUIzTzj2QuUa0UqZpn2pk4msheJ+pup1MssFucZz16kJ7IBXdPZ3XknHt3Dwfk3
      8LsDRP3NmLaJx+WVAIgby1Jxnl0dtzMUH+Hu3nu5lJ+mv3mAg/P72BzbSm+kD1vZKKXQ0HHp
      rsZo416X53dzH6+OICLXAMKRlFKkKyk5Aghn0jQNj0uOAMLh5AggHE0CIBxNAiAcTQIgHE0C
      IBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAc
      TQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0C
      IBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAc
      TQIgHO3/A0vR2ccf0u38AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Number Of Listings' width='192'>
      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
      H9MJ3TfEzc1bAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Room Types' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Top Host' width='192'>
      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
      ARCF5m8pVdDyBJfHcgAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
